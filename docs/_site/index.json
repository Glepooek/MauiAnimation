{
  "api/AlohaKit.Animations.AnimateColor.html": {
    "href": "api/AlohaKit.Animations.AnimateColor.html",
    "title": "Class AnimateColor | AlohaKit.Animations",
    "summary": "Class AnimateColor Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll The AnimateColor class defines a mechanism to smoothly animate the color property of a target visual element using progress-based interpolation. public class AnimateColor : AnimationBaseTrigger<Color> Inheritance object TriggerAction TriggerAction<VisualElement> AnimationBaseTrigger<Color> AnimateColor Inherited Members AnimationBaseTrigger<Color>.From AnimationBaseTrigger<Color>.To AnimationBaseTrigger<Color>.Duration AnimationBaseTrigger<Color>.Delay AnimationBaseTrigger<Color>.Easing AnimationBaseTrigger<Color>.TargetProperty AnimationBaseTrigger<Color>.SetDefaultFrom(Color) TriggerAction<VisualElement>.Invoke(object) TriggerAction.AssociatedType object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Invoke(VisualElement) Invokes the color animation on the target visual element. Uses interpolation to transition the specified property from the starting value (From) to the target value (To). protected override void Invoke(VisualElement sender) Parameters sender VisualElement The visual element on which the animation is applied. Exceptions NullReferenceException Thrown if the TargetProperty is null."
  },
  "api/AlohaKit.Animations.AnimateCornerRadius.html": {
    "href": "api/AlohaKit.Animations.AnimateCornerRadius.html",
    "title": "Class AnimateCornerRadius | AlohaKit.Animations",
    "summary": "Class AnimateCornerRadius Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll The AnimateCornerRadius class animates the corner radius property of a visual element, providing a smooth transition from an initial value to a target value. public class AnimateCornerRadius : AnimationBaseTrigger<CornerRadius> Inheritance object TriggerAction TriggerAction<VisualElement> AnimationBaseTrigger<CornerRadius> AnimateCornerRadius Inherited Members AnimationBaseTrigger<CornerRadius>.From AnimationBaseTrigger<CornerRadius>.To AnimationBaseTrigger<CornerRadius>.Duration AnimationBaseTrigger<CornerRadius>.Delay AnimationBaseTrigger<CornerRadius>.Easing AnimationBaseTrigger<CornerRadius>.TargetProperty AnimationBaseTrigger<CornerRadius>.SetDefaultFrom(CornerRadius) TriggerAction<VisualElement>.Invoke(object) TriggerAction.AssociatedType object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Invoke(VisualElement) Invokes the corner radius animation on the specified visual element. Uses progress-based interpolation to transition the corner radius property from the starting value (From) to the target value (To). protected override void Invoke(VisualElement sender) Parameters sender VisualElement The visual element on which the animation is applied. Exceptions NullReferenceException Thrown if the TargetProperty is null."
  },
  "api/AlohaKit.Animations.AnimateDouble.html": {
    "href": "api/AlohaKit.Animations.AnimateDouble.html",
    "title": "Class AnimateDouble | AlohaKit.Animations",
    "summary": "Class AnimateDouble Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll The AnimateDouble class provides a mechanism to animate the transition of a double value on a specified visual element, using interpolation based on animation progress. public class AnimateDouble : AnimationBaseTrigger<double> Inheritance object TriggerAction TriggerAction<VisualElement> AnimationBaseTrigger<double> AnimateDouble Inherited Members AnimationBaseTrigger<double>.From AnimationBaseTrigger<double>.To AnimationBaseTrigger<double>.Duration AnimationBaseTrigger<double>.Delay AnimationBaseTrigger<double>.Easing AnimationBaseTrigger<double>.TargetProperty AnimationBaseTrigger<double>.SetDefaultFrom(double) TriggerAction<VisualElement>.Invoke(object) TriggerAction.AssociatedType object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Invoke(VisualElement) Invokes the double property animation on the target visual element. Progress-based interpolation is applied to transition the property from the initial value (From) to the target value (To). protected override void Invoke(VisualElement sender) Parameters sender VisualElement The visual element on which the animation is applied. Exceptions NullReferenceException Thrown if the TargetProperty is null."
  },
  "api/AlohaKit.Animations.AnimateInt.html": {
    "href": "api/AlohaKit.Animations.AnimateInt.html",
    "title": "Class AnimateInt | AlohaKit.Animations",
    "summary": "Class AnimateInt Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll The AnimateInt class provides functionality to animate the transition of an integer property on a visual element using interpolation based on animation progress. public class AnimateInt : AnimationBaseTrigger<int> Inheritance object TriggerAction TriggerAction<VisualElement> AnimationBaseTrigger<int> AnimateInt Inherited Members AnimationBaseTrigger<int>.From AnimationBaseTrigger<int>.To AnimationBaseTrigger<int>.Duration AnimationBaseTrigger<int>.Delay AnimationBaseTrigger<int>.Easing AnimationBaseTrigger<int>.TargetProperty AnimationBaseTrigger<int>.SetDefaultFrom(int) TriggerAction<VisualElement>.Invoke(object) TriggerAction.AssociatedType object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Invoke(VisualElement) Invokes the integer property animation on the specified visual element. Applies progress-based interpolation to transition the property from the initial value (From) to the target value (To). protected override void Invoke(VisualElement sender) Parameters sender VisualElement The visual element on which the animation is applied. Exceptions NullReferenceException Thrown if the TargetProperty is null."
  },
  "api/AlohaKit.Animations.AnimateProgressColor.html": {
    "href": "api/AlohaKit.Animations.AnimateProgressColor.html",
    "title": "Class AnimateProgressColor | AlohaKit.Animations",
    "summary": "Class AnimateProgressColor Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll Represents a behavior that animates the transition of a color property from one value to another based on the progress of an animation. public class AnimateProgressColor : AnimationProgressBaseBehavior, INotifyPropertyChanged Inheritance object BindableObject Behavior Behavior<VisualElement> AnimationProgressBaseBehavior AnimateProgressColor Implements INotifyPropertyChanged Inherited Members AnimationProgressBaseBehavior.ProgressProperty AnimationProgressBaseBehavior.Progress AnimationProgressBaseBehavior.MinimumProperty AnimationProgressBaseBehavior.Minimum AnimationProgressBaseBehavior.MaximumProperty AnimationProgressBaseBehavior.Maximum AnimationProgressBaseBehavior.EasingProperty AnimationProgressBaseBehavior.Easing AnimationProgressBaseBehavior.TargetPropertyProperty AnimationProgressBaseBehavior.TargetProperty AnimationProgressBaseBehavior.Target AnimationProgressBaseBehavior.OnAttachedTo(VisualElement) AnimationProgressBaseBehavior.OnChanged(BindableObject, object, object) AnimationProgressBaseBehavior.OnDetachingFrom(VisualElement) AnimationProgressBaseBehavior.Update() Behavior<VisualElement>.OnAttachedTo(BindableObject) Behavior<VisualElement>.OnDetachingFrom(BindableObject) Behavior.AssociatedType BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FromProperty Bindable property for specifying the starting color of the animation. public static readonly BindableProperty FromProperty Field Value BindableProperty ToProperty Bindable property for specifying the ending color of the animation. public static readonly BindableProperty ToProperty Field Value BindableProperty Properties From Gets or sets the starting color of the animation. public Color From { get; set; } Property Value Color To Gets or sets the ending color of the animation. public Color To { get; set; } Property Value Color Methods OnUpdate() Performs the animation update logic. This method must be implemented by derived classes. protected override void OnUpdate()"
  },
  "api/AlohaKit.Animations.AnimateProgressCornerRadius.html": {
    "href": "api/AlohaKit.Animations.AnimateProgressCornerRadius.html",
    "title": "Class AnimateProgressCornerRadius | AlohaKit.Animations",
    "summary": "Class AnimateProgressCornerRadius Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll The AnimateProgressCornerRadius class interpolates the corner radius property of a visual element, transitioning from an initial value to a target value as the animation progresses. public class AnimateProgressCornerRadius : AnimationProgressBaseBehavior, INotifyPropertyChanged Inheritance object BindableObject Behavior Behavior<VisualElement> AnimationProgressBaseBehavior AnimateProgressCornerRadius Implements INotifyPropertyChanged Inherited Members AnimationProgressBaseBehavior.ProgressProperty AnimationProgressBaseBehavior.Progress AnimationProgressBaseBehavior.MinimumProperty AnimationProgressBaseBehavior.Minimum AnimationProgressBaseBehavior.MaximumProperty AnimationProgressBaseBehavior.Maximum AnimationProgressBaseBehavior.EasingProperty AnimationProgressBaseBehavior.Easing AnimationProgressBaseBehavior.TargetPropertyProperty AnimationProgressBaseBehavior.TargetProperty AnimationProgressBaseBehavior.Target AnimationProgressBaseBehavior.OnAttachedTo(VisualElement) AnimationProgressBaseBehavior.OnChanged(BindableObject, object, object) AnimationProgressBaseBehavior.OnDetachingFrom(VisualElement) AnimationProgressBaseBehavior.Update() Behavior<VisualElement>.OnAttachedTo(BindableObject) Behavior<VisualElement>.OnDetachingFrom(BindableObject) Behavior.AssociatedType BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FromProperty Bindable property for specifying the starting corner radius of the animation. public static readonly BindableProperty FromProperty Field Value BindableProperty ToProperty Bindable property for specifying the target corner radius of the animation. public static readonly BindableProperty ToProperty Field Value BindableProperty Properties From Gets or sets the starting corner radius of the animation. public CornerRadius From { get; set; } Property Value CornerRadius To Gets or sets the target corner radius of the animation. public CornerRadius To { get; set; } Property Value CornerRadius Methods OnUpdate() Updates the target corner radius property value based on the current progress of the animation. Calculates intermediate values using linear interpolation for each corner. protected override void OnUpdate()"
  },
  "api/AlohaKit.Animations.AnimateProgressDouble.html": {
    "href": "api/AlohaKit.Animations.AnimateProgressDouble.html",
    "title": "Class AnimateProgressDouble | AlohaKit.Animations",
    "summary": "Class AnimateProgressDouble Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll The AnimateProgressDouble class interpolates a double property of a visual element, transitioning from an initial value to a target value as the animation progresses. It allows scaling of the value using a multiplier. public class AnimateProgressDouble : AnimationProgressBaseBehavior, INotifyPropertyChanged Inheritance object BindableObject Behavior Behavior<VisualElement> AnimationProgressBaseBehavior AnimateProgressDouble Implements INotifyPropertyChanged Inherited Members AnimationProgressBaseBehavior.ProgressProperty AnimationProgressBaseBehavior.Progress AnimationProgressBaseBehavior.MinimumProperty AnimationProgressBaseBehavior.Minimum AnimationProgressBaseBehavior.MaximumProperty AnimationProgressBaseBehavior.Maximum AnimationProgressBaseBehavior.EasingProperty AnimationProgressBaseBehavior.Easing AnimationProgressBaseBehavior.TargetPropertyProperty AnimationProgressBaseBehavior.TargetProperty AnimationProgressBaseBehavior.Target AnimationProgressBaseBehavior.OnAttachedTo(VisualElement) AnimationProgressBaseBehavior.OnChanged(BindableObject, object, object) AnimationProgressBaseBehavior.OnDetachingFrom(VisualElement) AnimationProgressBaseBehavior.Update() Behavior<VisualElement>.OnAttachedTo(BindableObject) Behavior<VisualElement>.OnDetachingFrom(BindableObject) Behavior.AssociatedType BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FromProperty Bindable property for specifying the starting value of the animation. public static readonly BindableProperty FromProperty Field Value BindableProperty MultiplyValueProperty Bindable property for specifying a multiplier to scale the interpolated value. public static readonly BindableProperty MultiplyValueProperty Field Value BindableProperty ToProperty Bindable property for specifying the target value of the animation. public static readonly BindableProperty ToProperty Field Value BindableProperty Properties From Gets or sets the starting value of the animation. public double From { get; set; } Property Value double MultiplyValue Gets or sets a multiplier value used to scale the interpolated result. public double MultiplyValue { get; set; } Property Value double To Gets or sets the target value of the animation. public double To { get; set; } Property Value double Methods OnUpdate() Updates the target double property based on the current progress of the animation. Performs interpolation and applies the multiplier to calculate the value. protected override void OnUpdate()"
  },
  "api/AlohaKit.Animations.AnimateProgressThickness.html": {
    "href": "api/AlohaKit.Animations.AnimateProgressThickness.html",
    "title": "Class AnimateProgressThickness | AlohaKit.Animations",
    "summary": "Class AnimateProgressThickness Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll The AnimateProgressThickness class interpolates the thickness property of a visual element, transitioning from an initial value to a target value as the animation progresses. public class AnimateProgressThickness : AnimationProgressBaseBehavior, INotifyPropertyChanged Inheritance object BindableObject Behavior Behavior<VisualElement> AnimationProgressBaseBehavior AnimateProgressThickness Implements INotifyPropertyChanged Inherited Members AnimationProgressBaseBehavior.ProgressProperty AnimationProgressBaseBehavior.Progress AnimationProgressBaseBehavior.MinimumProperty AnimationProgressBaseBehavior.Minimum AnimationProgressBaseBehavior.MaximumProperty AnimationProgressBaseBehavior.Maximum AnimationProgressBaseBehavior.EasingProperty AnimationProgressBaseBehavior.Easing AnimationProgressBaseBehavior.TargetPropertyProperty AnimationProgressBaseBehavior.TargetProperty AnimationProgressBaseBehavior.Target AnimationProgressBaseBehavior.OnAttachedTo(VisualElement) AnimationProgressBaseBehavior.OnChanged(BindableObject, object, object) AnimationProgressBaseBehavior.OnDetachingFrom(VisualElement) AnimationProgressBaseBehavior.Update() Behavior<VisualElement>.OnAttachedTo(BindableObject) Behavior<VisualElement>.OnDetachingFrom(BindableObject) Behavior.AssociatedType BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FromProperty Bindable property for specifying the starting thickness value of the animation. public static readonly BindableProperty FromProperty Field Value BindableProperty ToProperty Bindable property for specifying the target thickness value of the animation. public static readonly BindableProperty ToProperty Field Value BindableProperty Properties From Gets or sets the starting thickness value of the animation. public Thickness From { get; set; } Property Value Thickness To Gets or sets the target thickness value of the animation. public Thickness To { get; set; } Property Value Thickness Methods OnUpdate() Updates the target thickness property value based on the current progress of the animation. Calculates intermediate values using linear interpolation for each thickness dimension. protected override void OnUpdate()"
  },
  "api/AlohaKit.Animations.AnimateThickness.html": {
    "href": "api/AlohaKit.Animations.AnimateThickness.html",
    "title": "Class AnimateThickness | AlohaKit.Animations",
    "summary": "Class AnimateThickness Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll The AnimateThickness class provides functionality to animate the transition of a thickness property on a visual element, using interpolation based on animation progress. public class AnimateThickness : AnimationBaseTrigger<Thickness> Inheritance object TriggerAction TriggerAction<VisualElement> AnimationBaseTrigger<Thickness> AnimateThickness Inherited Members AnimationBaseTrigger<Thickness>.From AnimationBaseTrigger<Thickness>.To AnimationBaseTrigger<Thickness>.Duration AnimationBaseTrigger<Thickness>.Delay AnimationBaseTrigger<Thickness>.Easing AnimationBaseTrigger<Thickness>.TargetProperty AnimationBaseTrigger<Thickness>.SetDefaultFrom(Thickness) TriggerAction<VisualElement>.Invoke(object) TriggerAction.AssociatedType object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Invoke(VisualElement) Invokes the thickness animation on the specified visual element. Uses progress-based interpolation to transition the thickness property from the initial value (From) to the target value (To). protected override void Invoke(VisualElement sender) Parameters sender VisualElement The visual element on which the animation is applied. Exceptions NullReferenceException Thrown if the TargetProperty is null."
  },
  "api/AlohaKit.Animations.AnimationBase.html": {
    "href": "api/AlohaKit.Animations.AnimationBase.html",
    "title": "Class AnimationBase | AlohaKit.Animations",
    "summary": "Class AnimationBase Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll The AnimationBase class serves as an abstract base for animations, offering configurable properties such as duration, delay, easing, and repeat behavior. public abstract class AnimationBase : BindableObject, INotifyPropertyChanged Inheritance object BindableObject AnimationBase Implements INotifyPropertyChanged Derived BounceInAnimation BounceOutAnimation ColorAnimation FadeInAnimation FadeOutAnimation FadeToAnimation FlipAnimation HeartAnimation JumpAnimation RelRotateToAnimation RelScaleToAnimation RotateToAnimation RotateXToAnimation RotateYToAnimation ScaleToAnimation ShakeAnimation StoryBoard TranslateToAnimation TurnstileInAnimation TurnstileOutAnimation Inherited Members BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DelayProperty Bindable property for specifying a delay before the animation begins, in milliseconds. public static readonly BindableProperty DelayProperty Field Value BindableProperty DurationProperty Bindable property for specifying the duration of the animation in milliseconds. public static readonly BindableProperty DurationProperty Field Value BindableProperty EasingProperty Bindable property for specifying the easing type of the animation. public static readonly BindableProperty EasingProperty Field Value BindableProperty RepeatForeverProperty Bindable property for specifying whether the animation should repeat indefinitely. public static readonly BindableProperty RepeatForeverProperty Field Value BindableProperty TargetProperty Bindable property for specifying the target visual element of the animation. public static readonly BindableProperty TargetProperty Field Value BindableProperty Properties Delay Gets or sets the delay before the animation begins, in milliseconds. public int Delay { get; set; } Property Value int Duration Gets or sets the duration of the animation, represented as a string in milliseconds. public string Duration { get; set; } Property Value string Easing Gets or sets the easing type of the animation. public EasingType Easing { get; set; } Property Value EasingType RepeatForever Gets or sets a value indicating whether the animation should repeat indefinitely. public bool RepeatForever { get; set; } Property Value bool Target Gets or sets the target visual element for the animation. public VisualElement Target { get; set; } Property Value VisualElement Methods Begin() public Task Begin() Returns Task BeginAnimation() protected abstract Task BeginAnimation() Returns Task End() public void End()"
  },
  "api/AlohaKit.Animations.AnimationBaseTrigger-1.html": {
    "href": "api/AlohaKit.Animations.AnimationBaseTrigger-1.html",
    "title": "Class AnimationBaseTrigger<T> | AlohaKit.Animations",
    "summary": "Class AnimationBaseTrigger<T> Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll The AnimationBaseTrigger class provides the foundation for creating custom animation triggers by defining common properties, methods, and behavior for animations. public abstract class AnimationBaseTrigger<T> : TriggerAction<VisualElement> Type Parameters T The type of the property to be animated. Inheritance object TriggerAction TriggerAction<VisualElement> AnimationBaseTrigger<T> Derived AnimateColor AnimateCornerRadius AnimateDouble AnimateInt AnimateThickness Inherited Members TriggerAction<VisualElement>.Invoke(object) TriggerAction.AssociatedType object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Delay Gets or sets the delay before the animation begins, in milliseconds. public int Delay { get; set; } Property Value int Duration Gets or sets the duration of the animation in milliseconds. public uint Duration { get; set; } Property Value uint Easing Gets or sets the easing function to apply to the animation. public EasingType Easing { get; set; } Property Value EasingType From Gets or sets the starting value of the animation. public T From { get; set; } Property Value T TargetProperty Gets or sets the bindable property that will be animated. public BindableProperty TargetProperty { get; set; } Property Value BindableProperty To Gets or sets the target value of the animation. public T To { get; set; } Property Value T Methods Invoke(VisualElement) Invokes the animation on the specified visual element. This method must be implemented in derived classes. protected override void Invoke(VisualElement sender) Parameters sender VisualElement The visual element on which the animation is applied. Exceptions NotImplementedException Thrown to indicate that the method must be implemented in derived classes. SetDefaultFrom(T) Sets the default \"From\" value for the animation if it has not been explicitly specified. protected void SetDefaultFrom(T property) Parameters property T The current property value to use as the default \"From\" value."
  },
  "api/AlohaKit.Animations.AnimationExtensions.html": {
    "href": "api/AlohaKit.Animations.AnimationExtensions.html",
    "title": "Class AnimationExtensions | AlohaKit.Animations",
    "summary": "Class AnimationExtensions Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll Contains extension methods to simplify applying animations to visual elements. public static class AnimationExtensions Inheritance object AnimationExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Animate(VisualElement, AnimationBase) Animates the specified VisualElement using the provided AnimationBase object. public static Task<bool> Animate(this VisualElement visualElement, AnimationBase animation) Parameters visualElement VisualElement The target visual element to be animated. animation AnimationBase The animation to apply to the visual element. Returns Task<bool> A Task representing the asynchronous operation. Returns true if the animation completes successfully; false otherwise."
  },
  "api/AlohaKit.Animations.AnimationProgressBaseBehavior.html": {
    "href": "api/AlohaKit.Animations.AnimationProgressBaseBehavior.html",
    "title": "Class AnimationProgressBaseBehavior | AlohaKit.Animations",
    "summary": "Class AnimationProgressBaseBehavior Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll The AnimationProgressBaseBehavior class provides the foundation for creating behaviors that animate properties of a visual element based on the progress of an animation. public abstract class AnimationProgressBaseBehavior : Behavior<VisualElement>, INotifyPropertyChanged Inheritance object BindableObject Behavior Behavior<VisualElement> AnimationProgressBaseBehavior Implements INotifyPropertyChanged Derived AnimateProgressColor AnimateProgressCornerRadius AnimateProgressDouble AnimateProgressThickness AnimateProgressInt Inherited Members Behavior<VisualElement>.OnAttachedTo(BindableObject) Behavior<VisualElement>.OnDetachingFrom(BindableObject) Behavior.AssociatedType BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields EasingProperty Bindable property for the easing function of the animation. public static readonly BindableProperty EasingProperty Field Value BindableProperty MaximumProperty Bindable property for the maximum progress value of the animation. public static readonly BindableProperty MaximumProperty Field Value BindableProperty MinimumProperty Bindable property for the minimum progress value of the animation. public static readonly BindableProperty MinimumProperty Field Value BindableProperty ProgressProperty Bindable property for the current progress of the animation. public static readonly BindableProperty ProgressProperty Field Value BindableProperty TargetPropertyProperty Bindable property for the target property that will be animated. public static readonly BindableProperty TargetPropertyProperty Field Value BindableProperty Properties Easing Gets or sets the easing function applied to the animation. public EasingType Easing { get; set; } Property Value EasingType Maximum Gets or sets the maximum progress value of the animation. public double Maximum { get; set; } Property Value double Minimum Gets or sets the minimum progress value of the animation. public double Minimum { get; set; } Property Value double Progress Gets or sets the current progress of the animation, where the value is a nullable double. public double? Progress { get; set; } Property Value double? Target Gets the target visual element to which the behavior is attached. public VisualElement Target { get; } Property Value VisualElement TargetProperty Gets or sets the bindable property that will be animated. public BindableProperty TargetProperty { get; set; } Property Value BindableProperty Methods OnAttachedTo(VisualElement) Called when the behavior is attached to a visual element. protected override void OnAttachedTo(VisualElement bindable) Parameters bindable VisualElement The visual element to which the behavior is attached. OnChanged(BindableObject, object, object) Called when the value of the Progress property changes. protected static void OnChanged(BindableObject bindable, object oldValue, object newValue) Parameters bindable BindableObject The bindable object where the property changed. oldValue object The old value of the property. newValue object The new value of the property. OnDetachingFrom(VisualElement) Called when the behavior is detached from a visual element. protected override void OnDetachingFrom(VisualElement bindable) Parameters bindable VisualElement The visual element from which the behavior is detached. OnUpdate() Performs the animation update logic. This method must be implemented by derived classes. protected abstract void OnUpdate() Update() Updates the animation based on the current progress and target properties. protected void Update()"
  },
  "api/AlohaKit.Animations.BeginAnimation.html": {
    "href": "api/AlohaKit.Animations.BeginAnimation.html",
    "title": "Class BeginAnimation | AlohaKit.Animations",
    "summary": "Class BeginAnimation Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll The BeginAnimation class defines a trigger action for starting an animation on a target visual element when the trigger is activated. [ContentProperty(\"Animation\")] public class BeginAnimation : TriggerAction<VisualElement> Inheritance object TriggerAction TriggerAction<VisualElement> BeginAnimation Inherited Members TriggerAction<VisualElement>.Invoke(object) TriggerAction.AssociatedType object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Animation Gets or sets the animation to be executed when the trigger action is invoked. public AnimationBase Animation { get; set; } Property Value AnimationBase Methods Invoke(VisualElement) Executes the specified animation on the target visual element. protected override void Invoke(VisualElement sender) Parameters sender VisualElement The visual element on which the animation is applied."
  },
  "api/AlohaKit.Animations.BeginAnimationBehavior.html": {
    "href": "api/AlohaKit.Animations.BeginAnimationBehavior.html",
    "title": "Class BeginAnimationBehavior | AlohaKit.Animations",
    "summary": "Class BeginAnimationBehavior Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll The BeginAnimationBehavior class provides functionality to automatically trigger an animation when the behavior is attached to a visual element. It ensures the animation is associated with the element and starts after a short delay. public class BeginAnimationBehavior : Behavior<VisualElement>, INotifyPropertyChanged Inheritance object BindableObject Behavior Behavior<VisualElement> BeginAnimationBehavior Implements INotifyPropertyChanged Inherited Members Behavior<VisualElement>.OnAttachedTo(BindableObject) Behavior<VisualElement>.OnDetachingFrom(BindableObject) Behavior.AssociatedType BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AnimationProperty Bindable property for specifying the animation to be executed when the behavior is attached. public static readonly BindableProperty AnimationProperty Field Value BindableProperty Properties Animation Gets or sets the animation to be executed when the behavior is attached. public AnimationBase Animation { get; set; } Property Value AnimationBase Methods OnAttachedTo(VisualElement) Called when the behavior is attached to a visual element. Associates the animation with the element and begins the animation. protected override void OnAttachedTo(VisualElement bindable) Parameters bindable VisualElement The visual element to which the behavior is attached. OnDetachingFrom(VisualElement) Called when the behavior is detached from a visual element. Clears the association with the visual element. protected override void OnDetachingFrom(VisualElement bindable) Parameters bindable VisualElement The visual element from which the behavior is detached."
  },
  "api/AlohaKit.Animations.Behaviors.AnimateProgressInt.html": {
    "href": "api/AlohaKit.Animations.Behaviors.AnimateProgressInt.html",
    "title": "Class AnimateProgressInt | AlohaKit.Animations",
    "summary": "Class AnimateProgressInt Namespace AlohaKit.Animations.Behaviors Assembly AlohaKit.Animations.dll public class AnimateProgressInt : AnimationProgressBaseBehavior, INotifyPropertyChanged Inheritance object BindableObject Behavior Behavior<VisualElement> AnimationProgressBaseBehavior AnimateProgressInt Implements INotifyPropertyChanged Inherited Members AnimationProgressBaseBehavior.ProgressProperty AnimationProgressBaseBehavior.Progress AnimationProgressBaseBehavior.MinimumProperty AnimationProgressBaseBehavior.Minimum AnimationProgressBaseBehavior.MaximumProperty AnimationProgressBaseBehavior.Maximum AnimationProgressBaseBehavior.EasingProperty AnimationProgressBaseBehavior.Easing AnimationProgressBaseBehavior.TargetPropertyProperty AnimationProgressBaseBehavior.TargetProperty AnimationProgressBaseBehavior.Target AnimationProgressBaseBehavior.OnAttachedTo(VisualElement) AnimationProgressBaseBehavior.OnChanged(BindableObject, object, object) AnimationProgressBaseBehavior.OnDetachingFrom(VisualElement) AnimationProgressBaseBehavior.Update() Behavior<VisualElement>.OnAttachedTo(BindableObject) Behavior<VisualElement>.OnDetachingFrom(BindableObject) Behavior.AssociatedType BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FromProperty public static readonly BindableProperty FromProperty Field Value BindableProperty ToProperty public static readonly BindableProperty ToProperty Field Value BindableProperty Properties From public int From { get; set; } Property Value int To public int To { get; set; } Property Value int Methods OnUpdate() Performs the animation update logic. This method must be implemented by derived classes. protected override void OnUpdate()"
  },
  "api/AlohaKit.Animations.Behaviors.html": {
    "href": "api/AlohaKit.Animations.Behaviors.html",
    "title": "Namespace AlohaKit.Animations.Behaviors | AlohaKit.Animations",
    "summary": "Namespace AlohaKit.Animations.Behaviors Classes AnimateProgressInt"
  },
  "api/AlohaKit.Animations.BounceInAnimation.html": {
    "href": "api/AlohaKit.Animations.BounceInAnimation.html",
    "title": "Class BounceInAnimation | AlohaKit.Animations",
    "summary": "Class BounceInAnimation Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll The BounceInAnimation is a custom animation designed to create a \"bounce-in\" effect, typically used in UI transitions where an element enters the screen with an animated bounce. public class BounceInAnimation : AnimationBase, INotifyPropertyChanged Inheritance object BindableObject AnimationBase BounceInAnimation Implements INotifyPropertyChanged Inherited Members AnimationBase.TargetProperty AnimationBase.Target AnimationBase.DurationProperty AnimationBase.Duration AnimationBase.EasingProperty AnimationBase.Easing AnimationBase.DelayProperty AnimationBase.Delay AnimationBase.RepeatForeverProperty AnimationBase.RepeatForever AnimationBase.Begin() AnimationBase.End() BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BeginAnimation() protected override Task BeginAnimation() Returns Task"
  },
  "api/AlohaKit.Animations.BounceOutAnimation.html": {
    "href": "api/AlohaKit.Animations.BounceOutAnimation.html",
    "title": "Class BounceOutAnimation | AlohaKit.Animations",
    "summary": "Class BounceOutAnimation Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll public class BounceOutAnimation : AnimationBase, INotifyPropertyChanged Inheritance object BindableObject AnimationBase BounceOutAnimation Implements INotifyPropertyChanged Inherited Members AnimationBase.TargetProperty AnimationBase.Target AnimationBase.DurationProperty AnimationBase.Duration AnimationBase.EasingProperty AnimationBase.Easing AnimationBase.DelayProperty AnimationBase.Delay AnimationBase.RepeatForeverProperty AnimationBase.RepeatForever AnimationBase.Begin() AnimationBase.End() BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BeginAnimation() protected override Task BeginAnimation() Returns Task"
  },
  "api/AlohaKit.Animations.ColorAnimation.html": {
    "href": "api/AlohaKit.Animations.ColorAnimation.html",
    "title": "Class ColorAnimation | AlohaKit.Animations",
    "summary": "Class ColorAnimation Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll The ColorAnimation is designed to animate a transition between colors within a user interface. public class ColorAnimation : AnimationBase, INotifyPropertyChanged Inheritance object BindableObject AnimationBase ColorAnimation Implements INotifyPropertyChanged Inherited Members AnimationBase.TargetProperty AnimationBase.Target AnimationBase.DurationProperty AnimationBase.Duration AnimationBase.EasingProperty AnimationBase.Easing AnimationBase.DelayProperty AnimationBase.Delay AnimationBase.RepeatForeverProperty AnimationBase.RepeatForever AnimationBase.Begin() AnimationBase.End() BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ToColorProperty public static readonly BindableProperty ToColorProperty Field Value BindableProperty Properties ToColor public Color ToColor { get; set; } Property Value Color Methods BeginAnimation() protected override Task BeginAnimation() Returns Task"
  },
  "api/AlohaKit.Animations.ColorExtensions.html": {
    "href": "api/AlohaKit.Animations.ColorExtensions.html",
    "title": "Class ColorExtensions | AlohaKit.Animations",
    "summary": "Class ColorExtensions Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll The ColorExtensions class contains methods to animate color changes and manage color animations for visual elements. public static class ColorExtensions Inheritance object ColorExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CancelAnimation(VisualElement) Cancels the color animation on the specified visual element. public static void CancelAnimation(this VisualElement self) Parameters self VisualElement The visual element on which to cancel the color animation. ColorTo(VisualElement, Color, Color, Action<Color>, uint, Easing) Animates the transition of a color property from one value to another on the specified visual element. public static Task<bool> ColorTo(this VisualElement self, Color fromColor, Color toColor, Action<Color> callback, uint length = 250, Easing easing = null) Parameters self VisualElement The visual element to which the color animation is applied. fromColor Color The starting color value. toColor Color The target color value. callback Action<Color> A callback function to handle the interpolated color during the animation. length uint The duration of the animation in milliseconds (default is 250). easing Easing The easing function to apply to the animation (default is linear). Returns Task<bool> A Task representing the asynchronous operation. Returns true if the animation completes successfully; false otherwise."
  },
  "api/AlohaKit.Animations.EasingType.html": {
    "href": "api/AlohaKit.Animations.EasingType.html",
    "title": "Enum EasingType | AlohaKit.Animations",
    "summary": "Enum EasingType Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll The EasingType enum provides a set of predefined easing functions used in animations. Each easing type determines the progression and behavior of an animation over time, allowing you to create smooth and visually appealing transitions. public enum EasingType Fields BounceIn = 0 BounceOut = 1 CubicIn = 2 CubicInOut = 3 CubicOut = 4 Linear = 5 SinIn = 6 SinInOut = 7 SinOut = 8 SpringIn = 9 SpringOut = 10"
  },
  "api/AlohaKit.Animations.EndAnimation.html": {
    "href": "api/AlohaKit.Animations.EndAnimation.html",
    "title": "Class EndAnimation | AlohaKit.Animations",
    "summary": "Class EndAnimation Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll The EndAnimation class defines a trigger action for stopping an animation applied to a visual element when the trigger is activated. public class EndAnimation : TriggerAction<VisualElement> Inheritance object TriggerAction TriggerAction<VisualElement> EndAnimation Inherited Members TriggerAction<VisualElement>.Invoke(object) TriggerAction.AssociatedType object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Animation Gets or sets the animation to be stopped when the trigger action is invoked. public AnimationBase Animation { get; set; } Property Value AnimationBase Methods Invoke(VisualElement) Executes the trigger action, ending the specified animation on the target visual element. protected override void Invoke(VisualElement sender) Parameters sender VisualElement The visual element on which the animation is stopped."
  },
  "api/AlohaKit.Animations.EndAnimationBehavior.html": {
    "href": "api/AlohaKit.Animations.EndAnimationBehavior.html",
    "title": "Class EndAnimationBehavior | AlohaKit.Animations",
    "summary": "Class EndAnimationBehavior Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll The EndAnimationBehavior class provides functionality to automatically stop an animation when the behavior is attached to a visual element. It ensures the animation is associated with the element and invokes the End method on the animation. public class EndAnimationBehavior : Behavior<VisualElement>, INotifyPropertyChanged Inheritance object BindableObject Behavior Behavior<VisualElement> EndAnimationBehavior Implements INotifyPropertyChanged Inherited Members Behavior<VisualElement>.OnAttachedTo(BindableObject) Behavior<VisualElement>.OnDetachingFrom(BindableObject) Behavior.AssociatedType BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AnimationProperty Bindable property for specifying the animation to be executed when the behavior is attached. public static readonly BindableProperty AnimationProperty Field Value BindableProperty Properties Animation Gets or sets the animation to be executed when the behavior is attached. public AnimationBase Animation { get; set; } Property Value AnimationBase Methods OnAttachedTo(VisualElement) Called when the behavior is attached to a visual element. Associates the animation with the element and ends the animation. protected override void OnAttachedTo(VisualElement bindable) Parameters bindable VisualElement The visual element to which the behavior is attached. OnDetachingFrom(VisualElement) Called when the behavior is detached from a visual element. Clears the association with the visual element. protected override void OnDetachingFrom(VisualElement bindable) Parameters bindable VisualElement The visual element from which the behavior is detached."
  },
  "api/AlohaKit.Animations.EntranceTransition.html": {
    "href": "api/AlohaKit.Animations.EntranceTransition.html",
    "title": "Class EntranceTransition | AlohaKit.Animations",
    "summary": "Class EntranceTransition Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll The EntranceTransition class animates visual elements with an entrance effect that includes translation and opacity adjustments. It handles animations for the target element and its child elements. public class EntranceTransition : Behavior<VisualElement>, INotifyPropertyChanged Inheritance object BindableObject Behavior Behavior<VisualElement> EntranceTransition Implements INotifyPropertyChanged Inherited Members Behavior<VisualElement>.OnAttachedTo(BindableObject) Behavior<VisualElement>.OnDetachingFrom(BindableObject) Behavior.AssociatedType BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DurationProperty Bindable property for specifying the duration of the animation in milliseconds. public static readonly BindableProperty DurationProperty Field Value BindableProperty Properties Duration Gets or sets the duration of the entrance animation, represented as a string in milliseconds. public string Duration { get; set; } Property Value string Methods OnAttachedTo(VisualElement) Called when the behavior is attached to a visual element. Initializes child elements and subscribes to property changes. protected override void OnAttachedTo(VisualElement bindable) Parameters bindable VisualElement The visual element to which the behavior is attached. OnDetachingFrom(VisualElement) Called when the behavior is detached from a visual element. Stops animations and clears references to the associated object and its children. protected override void OnDetachingFrom(VisualElement bindable) Parameters bindable VisualElement The visual element from which the behavior is detached."
  },
  "api/AlohaKit.Animations.FadeInAnimation.FadeDirection.html": {
    "href": "api/AlohaKit.Animations.FadeInAnimation.FadeDirection.html",
    "title": "Enum FadeInAnimation.FadeDirection | AlohaKit.Animations",
    "summary": "Enum FadeInAnimation.FadeDirection Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll Defines the direction of the fade-in animation (Up or Down). public enum FadeInAnimation.FadeDirection Fields Down = 1 Up = 0"
  },
  "api/AlohaKit.Animations.FadeInAnimation.html": {
    "href": "api/AlohaKit.Animations.FadeInAnimation.html",
    "title": "Class FadeInAnimation | AlohaKit.Animations",
    "summary": "Class FadeInAnimation Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll Represents an animation that fades in a visual element while translating it along the Y-axis. public class FadeInAnimation : AnimationBase, INotifyPropertyChanged Inheritance object BindableObject AnimationBase FadeInAnimation Implements INotifyPropertyChanged Inherited Members AnimationBase.TargetProperty AnimationBase.Target AnimationBase.DurationProperty AnimationBase.Duration AnimationBase.EasingProperty AnimationBase.Easing AnimationBase.DelayProperty AnimationBase.Delay AnimationBase.RepeatForeverProperty AnimationBase.RepeatForever AnimationBase.Begin() AnimationBase.End() BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DirectionProperty Bindable property for specifying the fade direction of the animation. public static readonly BindableProperty DirectionProperty Field Value BindableProperty Properties Direction Gets or sets the direction of the fade-in animation. public FadeInAnimation.FadeDirection Direction { get; set; } Property Value FadeInAnimation.FadeDirection Methods BeginAnimation() Begins the fade-in animation, adjusting the opacity and Y-axis translation of the target element. protected override Task BeginAnimation() Returns Task A Task representing the asynchronous operation. Exceptions NullReferenceException Thrown if the Target property is null."
  },
  "api/AlohaKit.Animations.FadeOutAnimation.FadeDirection.html": {
    "href": "api/AlohaKit.Animations.FadeOutAnimation.FadeDirection.html",
    "title": "Enum FadeOutAnimation.FadeDirection | AlohaKit.Animations",
    "summary": "Enum FadeOutAnimation.FadeDirection Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll Defines the direction of the fade-out animation (Up or Down). public enum FadeOutAnimation.FadeDirection Fields Down = 1 Up = 0"
  },
  "api/AlohaKit.Animations.FadeOutAnimation.html": {
    "href": "api/AlohaKit.Animations.FadeOutAnimation.html",
    "title": "Class FadeOutAnimation | AlohaKit.Animations",
    "summary": "Class FadeOutAnimation Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll Represents an animation that fades out a visual element while translating it along the Y-axis. public class FadeOutAnimation : AnimationBase, INotifyPropertyChanged Inheritance object BindableObject AnimationBase FadeOutAnimation Implements INotifyPropertyChanged Inherited Members AnimationBase.TargetProperty AnimationBase.Target AnimationBase.DurationProperty AnimationBase.Duration AnimationBase.EasingProperty AnimationBase.Easing AnimationBase.DelayProperty AnimationBase.Delay AnimationBase.RepeatForeverProperty AnimationBase.RepeatForever AnimationBase.Begin() AnimationBase.End() BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DirectionProperty Bindable property for specifying the fade direction of the animation. public static readonly BindableProperty DirectionProperty Field Value BindableProperty Properties Direction Gets or sets the direction of the fade-out animation. public FadeOutAnimation.FadeDirection Direction { get; set; } Property Value FadeOutAnimation.FadeDirection Methods BeginAnimation() Begins the fade-out animation, reducing the opacity and adjusting the Y-axis translation of the target element. protected override Task BeginAnimation() Returns Task A Task representing the asynchronous operation. Exceptions NullReferenceException Thrown if the Target property is null."
  },
  "api/AlohaKit.Animations.FadeToAnimation.html": {
    "href": "api/AlohaKit.Animations.FadeToAnimation.html",
    "title": "Class FadeToAnimation | AlohaKit.Animations",
    "summary": "Class FadeToAnimation Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll The FadeToAnimation class adjusts the opacity of a target element over a specified duration. public class FadeToAnimation : AnimationBase, INotifyPropertyChanged Inheritance object BindableObject AnimationBase FadeToAnimation Implements INotifyPropertyChanged Inherited Members AnimationBase.TargetProperty AnimationBase.Target AnimationBase.DurationProperty AnimationBase.Duration AnimationBase.EasingProperty AnimationBase.Easing AnimationBase.DelayProperty AnimationBase.Delay AnimationBase.RepeatForeverProperty AnimationBase.RepeatForever AnimationBase.Begin() AnimationBase.End() BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields OpacityProperty Bindable property for specifying the target opacity value of the animation. public static readonly BindableProperty OpacityProperty Field Value BindableProperty Properties Opacity Gets or sets the target opacity for the animation. public double Opacity { get; set; } Property Value double Methods BeginAnimation() Begins the fade-to animation, adjusting the opacity of the target element. protected override Task BeginAnimation() Returns Task A Task representing the asynchronous operation. Exceptions NullReferenceException Thrown if the Target property is null."
  },
  "api/AlohaKit.Animations.FlipAnimation.FlipDirection.html": {
    "href": "api/AlohaKit.Animations.FlipAnimation.FlipDirection.html",
    "title": "Enum FlipAnimation.FlipDirection | AlohaKit.Animations",
    "summary": "Enum FlipAnimation.FlipDirection Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll Specifies the direction for a flip animation or effect. public enum FlipAnimation.FlipDirection Fields Left = 0 Indicates a flip animation or effect directed to the left. Right = 1 Indicates a flip animation or effect directed to the right."
  },
  "api/AlohaKit.Animations.FlipAnimation.html": {
    "href": "api/AlohaKit.Animations.FlipAnimation.html",
    "title": "Class FlipAnimation | AlohaKit.Animations",
    "summary": "Class FlipAnimation Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll An animation that allow an element to rotate around the Y-axis while transitioning its opacity. public class FlipAnimation : AnimationBase, INotifyPropertyChanged Inheritance object BindableObject AnimationBase FlipAnimation Implements INotifyPropertyChanged Inherited Members AnimationBase.TargetProperty AnimationBase.Target AnimationBase.DurationProperty AnimationBase.Duration AnimationBase.EasingProperty AnimationBase.Easing AnimationBase.DelayProperty AnimationBase.Delay AnimationBase.RepeatForeverProperty AnimationBase.RepeatForever AnimationBase.Begin() AnimationBase.End() BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DirectionProperty Bindable property for specifying the direction of the flip animation. public static readonly BindableProperty DirectionProperty Field Value BindableProperty Properties Direction Gets or sets the direction of the flip animation. The direction can be either Left or Right. public FlipAnimation.FlipDirection Direction { get; set; } Property Value FlipAnimation.FlipDirection Methods BeginAnimation() protected override Task BeginAnimation() Returns Task"
  },
  "api/AlohaKit.Animations.HeartAnimation.html": {
    "href": "api/AlohaKit.Animations.HeartAnimation.html",
    "title": "Class HeartAnimation | AlohaKit.Animations",
    "summary": "Class HeartAnimation Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll Represents an animation that performs a \"heartbeat\" effect by scaling the target element in a pulsating manner. public class HeartAnimation : AnimationBase, INotifyPropertyChanged Inheritance object BindableObject AnimationBase HeartAnimation Implements INotifyPropertyChanged Inherited Members AnimationBase.TargetProperty AnimationBase.Target AnimationBase.DurationProperty AnimationBase.Duration AnimationBase.EasingProperty AnimationBase.Easing AnimationBase.DelayProperty AnimationBase.Delay AnimationBase.RepeatForeverProperty AnimationBase.RepeatForever AnimationBase.Begin() AnimationBase.End() BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BeginAnimation() protected override Task BeginAnimation() Returns Task"
  },
  "api/AlohaKit.Animations.Helpers.AnimationHelper.html": {
    "href": "api/AlohaKit.Animations.Helpers.AnimationHelper.html",
    "title": "Class AnimationHelper | AlohaKit.Animations",
    "summary": "Class AnimationHelper Namespace AlohaKit.Animations.Helpers Assembly AlohaKit.Animations.dll The AnimationHelper class contains helper methods for calculating intermediate values for various types of properties during an animation. public static class AnimationHelper Inheritance object AnimationHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetColorValue(Color, Color, double) Calculates an interpolated color value based on the animation progress. public static Color GetColorValue(Color from, Color to, double animationProgress) Parameters from Color The starting color. to Color The ending color. animationProgress double The progress of the animation, from 0.0 to 1.0. Returns Color The interpolated color value. GetCornerRadiusValue(CornerRadius, CornerRadius, double) Calculates an interpolated corner radius value based on the animation progress. public static CornerRadius GetCornerRadiusValue(CornerRadius from, CornerRadius to, double animationProgress) Parameters from CornerRadius The starting corner radius. to CornerRadius The ending corner radius. animationProgress double The progress of the animation, from 0.0 to 1.0. Returns CornerRadius The interpolated corner radius value. GetDoubleValue(double, double, double) Calculates an interpolated double value based on the animation progress. public static double GetDoubleValue(double from, double to, double animationProgress) Parameters from double The starting double value. to double The ending double value. animationProgress double The progress of the animation, from 0.0 to 1.0. Returns double The interpolated double value. GetIntValue(int, int, double) Calculates an interpolated integer value based on the animation progress. public static int GetIntValue(int from, int to, double animationProgress) Parameters from int The starting integer value. to int The ending integer value. animationProgress double The progress of the animation, from 0.0 to 1.0. Returns int The interpolated integer value. GetThicknessValue(Thickness, Thickness, double) Calculates an interpolated thickness value based on the animation progress. public static Thickness GetThicknessValue(Thickness from, Thickness to, double animationProgress) Parameters from Thickness The starting thickness. to Thickness The ending thickness. animationProgress double The progress of the animation, from 0.0 to 1.0. Returns Thickness The interpolated thickness value."
  },
  "api/AlohaKit.Animations.Helpers.EasingHelper.html": {
    "href": "api/AlohaKit.Animations.Helpers.EasingHelper.html",
    "title": "Class EasingHelper | AlohaKit.Animations",
    "summary": "Class EasingHelper Namespace AlohaKit.Animations.Helpers Assembly AlohaKit.Animations.dll The EasingHelper class provides a method to map EasingType values to corresponding Easing objects. public static class EasingHelper Inheritance object EasingHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetEasing(EasingType) Retrieves the easing function corresponding to the specified EasingType. public static Easing GetEasing(EasingType type) Parameters type EasingType The easing type to retrieve the corresponding easing function for. Returns Easing The Easing function corresponding to the specified easing type. Returns null if the easing type is not recognized."
  },
  "api/AlohaKit.Animations.Helpers.VisualTreeHelper.html": {
    "href": "api/AlohaKit.Animations.Helpers.VisualTreeHelper.html",
    "title": "Class VisualTreeHelper | AlohaKit.Animations",
    "summary": "Class VisualTreeHelper Namespace AlohaKit.Animations.Helpers Assembly AlohaKit.Animations.dll public static class VisualTreeHelper Inheritance object VisualTreeHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetChildren<T>(Element) public static IEnumerable<T> GetChildren<T>(this Element element) where T : Element Parameters element Element Returns IEnumerable<T> Type Parameters T GetParent<T>(Element) public static T GetParent<T>(this Element element) where T : Element Parameters element Element Returns T Type Parameters T"
  },
  "api/AlohaKit.Animations.Helpers.html": {
    "href": "api/AlohaKit.Animations.Helpers.html",
    "title": "Namespace AlohaKit.Animations.Helpers | AlohaKit.Animations",
    "summary": "Namespace AlohaKit.Animations.Helpers Classes AnimationHelper The AnimationHelper class contains helper methods for calculating intermediate values for various types of properties during an animation. EasingHelper The EasingHelper class provides a method to map EasingType values to corresponding Easing objects. VisualTreeHelper"
  },
  "api/AlohaKit.Animations.JumpAnimation.html": {
    "href": "api/AlohaKit.Animations.JumpAnimation.html",
    "title": "Class JumpAnimation | AlohaKit.Animations",
    "summary": "Class JumpAnimation Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll Represents an animation that creates a \"jump\" effect by translating the target element along the Y-axis. public class JumpAnimation : AnimationBase, INotifyPropertyChanged Inheritance object BindableObject AnimationBase JumpAnimation Implements INotifyPropertyChanged Inherited Members AnimationBase.TargetProperty AnimationBase.Target AnimationBase.DurationProperty AnimationBase.Duration AnimationBase.EasingProperty AnimationBase.Easing AnimationBase.DelayProperty AnimationBase.Delay AnimationBase.RepeatForeverProperty AnimationBase.RepeatForever AnimationBase.Begin() AnimationBase.End() BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BeginAnimation() protected override Task BeginAnimation() Returns Task"
  },
  "api/AlohaKit.Animations.RelRotateToAnimation.html": {
    "href": "api/AlohaKit.Animations.RelRotateToAnimation.html",
    "title": "Class RelRotateToAnimation | AlohaKit.Animations",
    "summary": "Class RelRotateToAnimation Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll Represents an animation that rotates the target element by a relative angle. public class RelRotateToAnimation : AnimationBase, INotifyPropertyChanged Inheritance object BindableObject AnimationBase RelRotateToAnimation Implements INotifyPropertyChanged Inherited Members AnimationBase.TargetProperty AnimationBase.Target AnimationBase.DurationProperty AnimationBase.Duration AnimationBase.EasingProperty AnimationBase.Easing AnimationBase.DelayProperty AnimationBase.Delay AnimationBase.RepeatForeverProperty AnimationBase.RepeatForever AnimationBase.Begin() AnimationBase.End() BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields RotationProperty Bindable property for specifying the relative rotation angle. public static readonly BindableProperty RotationProperty Field Value BindableProperty Properties Rotation Gets or sets the relative rotation angle for the animation. public double Rotation { get; set; } Property Value double Methods BeginAnimation() Begins the relative rotation animation, rotating the target element by the specified angle. protected override Task BeginAnimation() Returns Task A Task representing the asynchronous operation. Exceptions NullReferenceException Thrown when the Target property is null."
  },
  "api/AlohaKit.Animations.RelScaleToAnimation.html": {
    "href": "api/AlohaKit.Animations.RelScaleToAnimation.html",
    "title": "Class RelScaleToAnimation | AlohaKit.Animations",
    "summary": "Class RelScaleToAnimation Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll Represents an animation that scales the target element relative to its current size. public class RelScaleToAnimation : AnimationBase, INotifyPropertyChanged Inheritance object BindableObject AnimationBase RelScaleToAnimation Implements INotifyPropertyChanged Inherited Members AnimationBase.TargetProperty AnimationBase.Target AnimationBase.DurationProperty AnimationBase.Duration AnimationBase.EasingProperty AnimationBase.Easing AnimationBase.DelayProperty AnimationBase.Delay AnimationBase.RepeatForeverProperty AnimationBase.RepeatForever AnimationBase.Begin() AnimationBase.End() BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ScaleProperty Bindable property for specifying the relative scale value. public static readonly BindableProperty ScaleProperty Field Value BindableProperty Properties Scale Gets or sets the relative scale value for the animation. public double Scale { get; set; } Property Value double Methods BeginAnimation() protected override Task BeginAnimation() Returns Task"
  },
  "api/AlohaKit.Animations.RotateToAnimation.html": {
    "href": "api/AlohaKit.Animations.RotateToAnimation.html",
    "title": "Class RotateToAnimation | AlohaKit.Animations",
    "summary": "Class RotateToAnimation Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll The RotateToAnimation class animates the rotation of a target element to a specified angle. public class RotateToAnimation : AnimationBase, INotifyPropertyChanged Inheritance object BindableObject AnimationBase RotateToAnimation Implements INotifyPropertyChanged Inherited Members AnimationBase.TargetProperty AnimationBase.Target AnimationBase.DurationProperty AnimationBase.Duration AnimationBase.EasingProperty AnimationBase.Easing AnimationBase.DelayProperty AnimationBase.Delay AnimationBase.RepeatForeverProperty AnimationBase.RepeatForever AnimationBase.Begin() AnimationBase.End() BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields RotationProperty Bindable property for specifying the target rotation angle. public static readonly BindableProperty RotationProperty Field Value BindableProperty Properties Rotation Gets or sets the target rotation angle for the animation. public double Rotation { get; set; } Property Value double Methods BeginAnimation() Begins the rotation animation, rotating the target element to the specified angle. protected override Task BeginAnimation() Returns Task A Task representing the asynchronous operation. Exceptions NullReferenceException Thrown when the Target property is null."
  },
  "api/AlohaKit.Animations.RotateXToAnimation.html": {
    "href": "api/AlohaKit.Animations.RotateXToAnimation.html",
    "title": "Class RotateXToAnimation | AlohaKit.Animations",
    "summary": "Class RotateXToAnimation Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll Represents an animation that rotates the target element around the X-axis to a specified angle. public class RotateXToAnimation : AnimationBase, INotifyPropertyChanged Inheritance object BindableObject AnimationBase RotateXToAnimation Implements INotifyPropertyChanged Inherited Members AnimationBase.TargetProperty AnimationBase.Target AnimationBase.DurationProperty AnimationBase.Duration AnimationBase.EasingProperty AnimationBase.Easing AnimationBase.DelayProperty AnimationBase.Delay AnimationBase.RepeatForeverProperty AnimationBase.RepeatForever AnimationBase.Begin() AnimationBase.End() BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields RotationProperty Bindable property for specifying the target rotation angle around the X-axis. public static readonly BindableProperty RotationProperty Field Value BindableProperty Properties Rotation Gets or sets the target rotation angle around the X-axis. public double Rotation { get; set; } Property Value double Methods BeginAnimation() Begins the rotation animation around the X-axis. protected override Task BeginAnimation() Returns Task A Task representing the asynchronous operation. Exceptions NullReferenceException Thrown when the Target property is null."
  },
  "api/AlohaKit.Animations.RotateYToAnimation.html": {
    "href": "api/AlohaKit.Animations.RotateYToAnimation.html",
    "title": "Class RotateYToAnimation | AlohaKit.Animations",
    "summary": "Class RotateYToAnimation Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll Represents an animation that rotates the target element around the Y-axis to a specified angle. public class RotateYToAnimation : AnimationBase, INotifyPropertyChanged Inheritance object BindableObject AnimationBase RotateYToAnimation Implements INotifyPropertyChanged Inherited Members AnimationBase.TargetProperty AnimationBase.Target AnimationBase.DurationProperty AnimationBase.Duration AnimationBase.EasingProperty AnimationBase.Easing AnimationBase.DelayProperty AnimationBase.Delay AnimationBase.RepeatForeverProperty AnimationBase.RepeatForever AnimationBase.Begin() AnimationBase.End() BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields RotationProperty Bindable property for specifying the target rotation angle around the Y-axis. public static readonly BindableProperty RotationProperty Field Value BindableProperty Properties Rotation Gets or sets the target rotation angle around the Y-axis. public double Rotation { get; set; } Property Value double Methods BeginAnimation() Begins the rotation animation around the Y-axis. protected override Task BeginAnimation() Returns Task A Task representing the asynchronous operation. Exceptions NullReferenceException Thrown when the Target property is null."
  },
  "api/AlohaKit.Animations.Sample.App.html": {
    "href": "api/AlohaKit.Animations.Sample.App.html",
    "title": "Class App | AlohaKit.Animations",
    "summary": "Class App Namespace AlohaKit.Animations.Sample Assembly AlohaKit.Animations.Sample.dll [XamlFilePath(\"App.xaml\")] public class App : Application, INotifyPropertyChanged, IElementController, IEffectControlProvider, IToolTipElement, IContextFlyoutElement, IApplicationController, IElementConfiguration<Application>, IVisualTreeElement, IApplication, IElement Inheritance object BindableObject Element Application App Implements INotifyPropertyChanged IElementController IEffectControlProvider IToolTipElement IContextFlyoutElement IApplicationController IElementConfiguration<Application> IVisualTreeElement IApplication IElement Inherited Members Application.MapWindowSoftInputModeAdjust(ApplicationHandler, Application) Application.Quit() Application.On<T>() Application.OnAppLinkRequestReceived(Uri) Application.OnParentSet() Application.OnResume() Application.OnSleep() Application.OnStart() Application.CleanUp() Application.OpenWindow(Window) Application.CloseWindow(Window) Application.ActivateWindow(Window) Application.CreateWindow(IActivationState) Application.AppLinks Application.Current Application.MainPage Application.Resources Application.UserAppTheme Application.PlatformAppTheme Application.RequestedTheme Application.AccentColor Application.Windows Application.RequestedThemeChanged Application.ModalPopped Application.ModalPopping Application.ModalPushed Application.ModalPushing Application.PageAppearing Application.PageDisappearing Element.AutomationIdProperty Element.ClassIdProperty Element.MapAutomationPropertiesIsInAccessibleTree(IElementHandler, Element) Element.MapAutomationPropertiesExcludedWithChildren(IElementHandler, Element) Element.InsertLogicalChild(int, Element) Element.AddLogicalChild(Element) Element.RemoveLogicalChild(Element) Element.ClearLogicalChildren() Element.FindByName(string) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, string) Element.OnBindingContextChanged() Element.OnChildAdded(Element) Element.OnChildRemoved(Element, int) Element.OnPropertyChanged(string) Element.OnParentChanging(ParentChangingEventArgs) Element.OnParentChanged() Element.OnHandlerChanging(HandlerChangingEventArgs) Element.OnHandlerChanged() Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.Handler Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved Element.ParentChanging Element.ParentChanged Element.HandlerChanging Element.HandlerChanged BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors App() public App()"
  },
  "api/AlohaKit.Animations.Sample.AppShell.html": {
    "href": "api/AlohaKit.Animations.Sample.AppShell.html",
    "title": "Class AppShell | AlohaKit.Animations",
    "summary": "Class AppShell Namespace AlohaKit.Animations.Sample Assembly AlohaKit.Animations.Sample.dll [XamlFilePath(\"AppShell.xaml\")] public class AppShell : Shell, INotifyPropertyChanged, IVisualTreeElement, IEffectControlProvider, IToolTipElement, IContextFlyoutElement, IAnimatable, ILayout, IElementConfiguration<Page>, ISafeAreaView, ITitledElement, IToolbarElement, IShellController, IPageController, IVisualElementController, IElementController, IPageContainer<Page>, IFlyoutView, IView, IElement, ITransform Inheritance object BindableObject Element StyleableElement NavigableElement VisualElement Page Shell AppShell Implements INotifyPropertyChanged IVisualTreeElement IEffectControlProvider IToolTipElement IContextFlyoutElement IAnimatable ILayout IElementConfiguration<Page> ISafeAreaView ITitledElement IToolbarElement IShellController IPageController IVisualElementController IElementController IPageContainer<Page> IFlyoutView IView IElement ITransform Inherited Members Shell.BackButtonBehaviorProperty Shell.PresentationModeProperty Shell.FlyoutBehaviorProperty Shell.NavBarIsVisibleProperty Shell.NavBarHasShadowProperty Shell.SearchHandlerProperty Shell.FlyoutItemIsVisibleProperty Shell.TabBarIsVisibleProperty Shell.TitleViewProperty Shell.MenuItemTemplateProperty Shell.ItemTemplateProperty Shell.BackgroundColorProperty Shell.DisabledColorProperty Shell.ForegroundColorProperty Shell.TabBarBackgroundColorProperty Shell.TabBarDisabledColorProperty Shell.TabBarForegroundColorProperty Shell.TabBarTitleColorProperty Shell.TabBarUnselectedColorProperty Shell.TitleColorProperty Shell.UnselectedColorProperty Shell.FlyoutBackdropProperty Shell.FlyoutWidthProperty Shell.FlyoutHeightProperty Shell.CurrentItemProperty Shell.CurrentStateProperty Shell.FlyoutBackgroundImageProperty Shell.FlyoutBackgroundImageAspectProperty Shell.FlyoutBackgroundColorProperty Shell.FlyoutBackgroundProperty Shell.FlyoutHeaderBehaviorProperty Shell.FlyoutHeaderProperty Shell.FlyoutFooterProperty Shell.FlyoutHeaderTemplateProperty Shell.FlyoutFooterTemplateProperty Shell.FlyoutIsPresentedProperty Shell.ItemsProperty Shell.FlyoutIconProperty Shell.FlyoutVerticalScrollModeProperty Shell.FlyoutContentProperty Shell.FlyoutContentTemplateProperty Shell.GetFlyoutItemIsVisible(BindableObject) Shell.SetFlyoutItemIsVisible(BindableObject, bool) Shell.GetMenuItemTemplate(BindableObject) Shell.SetMenuItemTemplate(BindableObject, DataTemplate) Shell.GetItemTemplate(BindableObject) Shell.SetItemTemplate(BindableObject, DataTemplate) Shell.GetBackButtonBehavior(BindableObject) Shell.SetBackButtonBehavior(BindableObject, BackButtonBehavior) Shell.GetPresentationMode(BindableObject) Shell.SetPresentationMode(BindableObject, PresentationMode) Shell.GetFlyoutBehavior(BindableObject) Shell.SetFlyoutBehavior(BindableObject, FlyoutBehavior) Shell.GetFlyoutWidth(BindableObject) Shell.SetFlyoutWidth(BindableObject, double) Shell.GetFlyoutHeight(BindableObject) Shell.SetFlyoutHeight(BindableObject, double) Shell.GetNavBarIsVisible(BindableObject) Shell.SetNavBarIsVisible(BindableObject, bool) Shell.GetNavBarHasShadow(BindableObject) Shell.SetNavBarHasShadow(BindableObject, bool) Shell.GetSearchHandler(BindableObject) Shell.SetSearchHandler(BindableObject, SearchHandler) Shell.GetTabBarIsVisible(BindableObject) Shell.SetTabBarIsVisible(BindableObject, bool) Shell.GetTitleView(BindableObject) Shell.SetTitleView(BindableObject, View) Shell.GetBackgroundColor(BindableObject) Shell.SetBackgroundColor(BindableObject, Color) Shell.GetDisabledColor(BindableObject) Shell.SetDisabledColor(BindableObject, Color) Shell.GetForegroundColor(BindableObject) Shell.SetForegroundColor(BindableObject, Color) Shell.GetTabBarBackgroundColor(BindableObject) Shell.SetTabBarBackgroundColor(BindableObject, Color) Shell.GetTabBarDisabledColor(BindableObject) Shell.SetTabBarDisabledColor(BindableObject, Color) Shell.GetTabBarForegroundColor(BindableObject) Shell.SetTabBarForegroundColor(BindableObject, Color) Shell.GetTabBarTitleColor(BindableObject) Shell.SetTabBarTitleColor(BindableObject, Color) Shell.GetTabBarUnselectedColor(BindableObject) Shell.SetTabBarUnselectedColor(BindableObject, Color) Shell.GetTitleColor(BindableObject) Shell.SetTitleColor(BindableObject, Color) Shell.GetUnselectedColor(BindableObject) Shell.SetUnselectedColor(BindableObject, Color) Shell.GetFlyoutBackdrop(BindableObject) Shell.SetFlyoutBackdrop(BindableObject, Brush) Shell.GoToAsync(ShellNavigationState) Shell.GoToAsync(ShellNavigationState, bool) Shell.GoToAsync(ShellNavigationState, IDictionary<string, object>) Shell.GoToAsync(ShellNavigationState, bool, IDictionary<string, object>) Shell.GoToAsync(ShellNavigationState, ShellNavigationQueryParameters) Shell.GoToAsync(ShellNavigationState, bool, ShellNavigationQueryParameters) Shell.OnBindingContextChanged() Shell.OnBackButtonPressed() Shell.OnNavigated(ShellNavigatedEventArgs) Shell.OnNavigating(ShellNavigatingEventArgs) Shell.LayoutChildren(double, double, double, double) Shell.OnPropertyChanged(string) Shell.CurrentPage Shell.Current Shell.FlyoutVerticalScrollMode Shell.FlyoutIcon Shell.CurrentItem Shell.CurrentState Shell.FlyoutBackgroundImage Shell.FlyoutBackgroundImageAspect Shell.FlyoutBackgroundColor Shell.FlyoutBackground Shell.FlyoutBackdrop Shell.FlyoutWidth Shell.FlyoutHeight Shell.FlyoutBehavior Shell.FlyoutHeader Shell.FlyoutFooter Shell.FlyoutHeaderBehavior Shell.FlyoutHeaderTemplate Shell.FlyoutFooterTemplate Shell.FlyoutIsPresented Shell.Items Shell.ItemTemplate Shell.MenuItemTemplate Shell.FlyoutItems Shell.FlyoutContent Shell.FlyoutContentTemplate Shell.Navigated Shell.Navigating Page.BusySetSignalName Page.AlertSignalName Page.PromptSignalName Page.ActionSheetSignalName Page.BackgroundImageSourceProperty Page.IsBusyProperty Page.PaddingProperty Page.TitleProperty Page.IconImageSourceProperty Page.DisplayActionSheet(string, string, string, params string[]) Page.DisplayActionSheet(string, string, string, FlowDirection, params string[]) Page.DisplayAlert(string, string, string) Page.DisplayAlert(string, string, string, string) Page.DisplayAlert(string, string, string, FlowDirection) Page.DisplayAlert(string, string, string, string, FlowDirection) Page.DisplayPromptAsync(string, string, string, string, string, int, Keyboard, string) Page.ForceLayout() Page.SendBackButtonPressed() Page.OnAppearing() Page.OnChildMeasureInvalidated(object, EventArgs) Page.OnDisappearing() Page.OnParentSet() Page.OnSizeAllocated(double, double) Page.UpdateChildrenLayout() Page.On<T>() Page.OnNavigatedTo(NavigatedToEventArgs) Page.OnNavigatingFrom(NavigatingFromEventArgs) Page.OnNavigatedFrom(NavigatedFromEventArgs) Page.GetParentWindow() Page.BackgroundImageSource Page.IconImageSource Page.IsBusy Page.Padding Page.Title Page.ToolbarItems Page.MenuBarItems Page.LayoutChanged Page.Appearing Page.Disappearing Page.NavigatedTo Page.NavigatingFrom Page.NavigatedFrom VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.MaximumWidthRequestProperty VisualElement.MaximumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.WindowProperty VisualElement.ShadowProperty VisualElement.ZIndexProperty VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Measure(double, double) VisualElement.Measure(double, double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildRemoved(Element, int) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(double, double) VisualElement.SizeAllocated(double, double) VisualElement.ChangeVisualState() VisualElement.RefreshIsEnabledProperty() VisualElement.Arrange(Rect) VisualElement.ArrangeOverride(Rect) VisualElement.Layout(Rect) VisualElement.InvalidateMeasureOverride() VisualElement.MeasureOverride(double, double) VisualElement.MapBackgroundColor(IViewHandler, IView) VisualElement.MapBackgroundImageSource(IViewHandler, IView) VisualElement.Visual VisualElement.FlowDirection VisualElement.Window VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsEnabledCore VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.MaximumHeightRequest VisualElement.MaximumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.Frame VisualElement.Handler VisualElement.Shadow VisualElement.ZIndex VisualElement.DesiredSize VisualElement.IsLoaded VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused VisualElement.Loaded VisualElement.Unloaded NavigableElement.Navigation StyleableElement.Style StyleableElement.StyleClass StyleableElement.class Element.AutomationIdProperty Element.ClassIdProperty Element.MapAutomationPropertiesIsInAccessibleTree(IElementHandler, Element) Element.MapAutomationPropertiesExcludedWithChildren(IElementHandler, Element) Element.InsertLogicalChild(int, Element) Element.AddLogicalChild(Element) Element.RemoveLogicalChild(Element) Element.ClearLogicalChildren() Element.FindByName(string) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, string) Element.OnParentChanging(ParentChangingEventArgs) Element.OnParentChanged() Element.OnHandlerChanging(HandlerChangingEventArgs) Element.OnHandlerChanged() Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved Element.ParentChanging Element.ParentChanged Element.HandlerChanging Element.HandlerChanged BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppShell() public AppShell()"
  },
  "api/AlohaKit.Animations.Sample.MainActivity.html": {
    "href": "api/AlohaKit.Animations.Sample.MainActivity.html",
    "title": "Class MainActivity | AlohaKit.Animations",
    "summary": "Class MainActivity Namespace AlohaKit.Animations.Sample Assembly AlohaKit.Animations.Sample.dll [Activity(Theme = \"@style/Maui.SplashTheme\", MainLauncher = true, ConfigurationChanges = ConfigChanges.Orientation|ConfigChanges.ScreenLayout|ConfigChanges.UiMode|ConfigChanges.ScreenSize|ConfigChanges.SmallestScreenSize|ConfigChanges.Density)] public class MainActivity : MauiAppCompatActivity, IComponentCallbacks2, IComponentCallbacks, KeyEvent.ICallback, LayoutInflater.IFactory2, LayoutInflater.IFactory, View.IOnCreateContextMenuListener, Window.ICallback, KeyEventDispatcher.IComponent, IFullyDrawnReporterOwner, IOnBackPressedDispatcherOwner, IContextAware, IActivityResultCaller, IActivityResultRegistryOwner, IOnMultiWindowModeChangedProvider, IOnNewIntentProvider, IOnPictureInPictureModeChangedProvider, IOnUserLeaveHintProvider, IOnConfigurationChangedProvider, IOnTrimMemoryProvider, IMenuHost, IHasDefaultViewModelProviderFactory, IViewModelStoreOwner, ISavedStateRegistryOwner, ILifecycleOwner, ActivityCompat.IOnRequestPermissionsResultCallback, ActivityCompat.IRequestPermissionsRequestCodeValidator, ActionBarDrawerToggle.IDelegateProvider, IAppCompatCallback, TaskStackBuilder.ISupportParentable, IJavaObject, IJavaPeerable, IDisposable Inheritance object Object Context ContextWrapper ContextThemeWrapper Activity ComponentActivity ComponentActivity FragmentActivity AppCompatActivity MauiAppCompatActivity MainActivity Implements IComponentCallbacks2 IComponentCallbacks KeyEvent.ICallback LayoutInflater.IFactory2 LayoutInflater.IFactory View.IOnCreateContextMenuListener Window.ICallback KeyEventDispatcher.IComponent IFullyDrawnReporterOwner IOnBackPressedDispatcherOwner IContextAware IActivityResultCaller IActivityResultRegistryOwner IOnMultiWindowModeChangedProvider IOnNewIntentProvider IOnPictureInPictureModeChangedProvider IOnUserLeaveHintProvider IOnConfigurationChangedProvider IOnTrimMemoryProvider IMenuHost IHasDefaultViewModelProviderFactory IViewModelStoreOwner ISavedStateRegistryOwner ILifecycleOwner ActivityCompat.IOnRequestPermissionsResultCallback ActivityCompat.IRequestPermissionsRequestCodeValidator ActionBarDrawerToggle.IDelegateProvider IAppCompatCallback TaskStackBuilder.ISupportParentable IJavaObject IJavaPeerable IDisposable Inherited Members MauiAppCompatActivity.OnCreate(Bundle) MauiAppCompatActivity.DispatchTouchEvent(MotionEvent) MauiAppCompatActivity.OnActivityResult(int, Result, Intent) MauiAppCompatActivity.OnBackPressed() MauiAppCompatActivity.OnConfigurationChanged(Configuration) MauiAppCompatActivity.OnNewIntent(Intent) MauiAppCompatActivity.OnPostCreate(Bundle) MauiAppCompatActivity.OnPostResume() MauiAppCompatActivity.OnRestart() MauiAppCompatActivity.OnRequestPermissionsResult(int, string[], Permission[]) MauiAppCompatActivity.OnRestoreInstanceState(Bundle) MauiAppCompatActivity.AllowFragmentRestore AppCompatActivity.OnCreateSupportNavigateUpTaskStack(TaskStackBuilder) AppCompatActivity.OnLocalesChanged(LocaleListCompat) AppCompatActivity.OnMenuItemSelected(int, IMenuItem) AppCompatActivity.OnNightModeChanged(int) AppCompatActivity.OnPrepareSupportNavigateUpTaskStack(TaskStackBuilder) AppCompatActivity.OnSupportActionModeFinished(ActionMode) AppCompatActivity.OnSupportActionModeStarted(ActionMode) AppCompatActivity.OnSupportContentChanged() AppCompatActivity.OnSupportNavigateUp() AppCompatActivity.OnWindowStartingSupportActionMode(ActionMode.ICallback) AppCompatActivity.SetSupportActionBar(Toolbar) AppCompatActivity.SetSupportProgress(int) AppCompatActivity.SetSupportProgressBarIndeterminate(bool) AppCompatActivity.SetSupportProgressBarIndeterminateVisibility(bool) AppCompatActivity.SetSupportProgressBarVisibility(bool) AppCompatActivity.StartSupportActionMode(ActionMode.ICallback) AppCompatActivity.SupportNavigateUpTo(Intent) AppCompatActivity.SupportRequestWindowFeature(int) AppCompatActivity.SupportShouldUpRecreateTask(Intent) AppCompatActivity.Delegate AppCompatActivity.DrawerToggleDelegate AppCompatActivity.SupportActionBar AppCompatActivity.SupportParentActivityIntent FragmentActivity.OnAttachFragment(Fragment) FragmentActivity.OnResumeFragments() FragmentActivity.SetEnterSharedElementCallback(SharedElementCallback) FragmentActivity.SetExitSharedElementCallback(SharedElementCallback) FragmentActivity.StartActivityFromFragment(Fragment, Intent, int) FragmentActivity.StartActivityFromFragment(Fragment, Intent, int, Bundle) FragmentActivity.StartIntentSenderFromFragment(Fragment, IntentSender, int, Intent, int, int, int, Bundle) FragmentActivity.SupportFinishAfterTransition() FragmentActivity.SupportInvalidateOptionsMenu() FragmentActivity.SupportPostponeEnterTransition() FragmentActivity.SupportStartPostponedEnterTransition() FragmentActivity.ValidateRequestPermissionsRequestCode(int) FragmentActivity.Lifecycle FragmentActivity.SupportFragmentManager FragmentActivity.SupportLoaderManager ComponentActivity.AddMenuProvider(IMenuProvider) ComponentActivity.AddMenuProvider(IMenuProvider, ILifecycleOwner) ComponentActivity.AddMenuProvider(IMenuProvider, ILifecycleOwner, Lifecycle.State) ComponentActivity.AddOnConfigurationChangedListener(IConsumer) ComponentActivity.AddOnContextAvailableListener(IOnContextAvailableListener) ComponentActivity.AddOnMultiWindowModeChangedListener(IConsumer) ComponentActivity.AddOnNewIntentListener(IConsumer) ComponentActivity.AddOnPictureInPictureModeChangedListener(IConsumer) ComponentActivity.AddOnTrimMemoryListener(IConsumer) ComponentActivity.AddOnUserLeaveHintListener(IRunnable) ComponentActivity.InitializeViewTreeOwners() ComponentActivity.InvalidateMenu() ComponentActivity.OnRetainCustomNonConfigurationInstance() ComponentActivity.OnRetainNonConfigurationInstance() ComponentActivity.PeekAvailableContext() ComponentActivity.RegisterForActivityResult(ActivityResultContract, IActivityResultCallback) ComponentActivity.RegisterForActivityResult(ActivityResultContract, ActivityResultRegistry, IActivityResultCallback) ComponentActivity.RemoveMenuProvider(IMenuProvider) ComponentActivity.RemoveOnConfigurationChangedListener(IConsumer) ComponentActivity.RemoveOnContextAvailableListener(IOnContextAvailableListener) ComponentActivity.RemoveOnMultiWindowModeChangedListener(IConsumer) ComponentActivity.RemoveOnNewIntentListener(IConsumer) ComponentActivity.RemoveOnPictureInPictureModeChangedListener(IConsumer) ComponentActivity.RemoveOnTrimMemoryListener(IConsumer) ComponentActivity.RemoveOnUserLeaveHintListener(IRunnable) ComponentActivity.ActivityResultRegistry ComponentActivity.DefaultViewModelCreationExtras ComponentActivity.DefaultViewModelProviderFactory ComponentActivity.FullyDrawnReporter ComponentActivity.LastCustomNonConfigurationInstance ComponentActivity.OnBackPressedDispatcher ComponentActivity.SavedStateRegistry ComponentActivity.ViewModelStore ComponentActivity.ContextAvailable ComponentActivity.GetExtraData(Class) ComponentActivity.PutExtraData(ComponentActivity.ExtraData) ComponentActivity.ShouldDumpInternalState(string[]) ComponentActivity.SuperDispatchKeyEvent(KeyEvent) Activity.FullscreenModeRequestEnter Activity.FullscreenModeRequestExit Activity.OverrideTransitionClose Activity.OverrideTransitionOpen Activity.FindViewById<T>(int) Activity.RequireViewById<T>(int) Activity.StartActivityForResult(Type, int) Activity.RunOnUiThread(Action) Activity.AddContentView(View, ViewGroup.LayoutParams) Activity.ClearOverrideActivityTransition(OverrideTransition) Activity.CloseContextMenu() Activity.CloseOptionsMenu() Activity.CreatePendingResult(int, Intent, PendingIntentFlags) Activity.DismissDialog(int) Activity.DismissKeyboardShortcutsHelper() Activity.DispatchGenericMotionEvent(MotionEvent) Activity.DispatchKeyEvent(KeyEvent) Activity.DispatchKeyShortcutEvent(KeyEvent) Activity.DispatchPopulateAccessibilityEvent(AccessibilityEvent) Activity.DispatchTrackballEvent(MotionEvent) Activity.Dump(string, FileDescriptor, PrintWriter, string[]) Activity.EnterPictureInPictureMode() Activity.EnterPictureInPictureMode(PictureInPictureParams) Activity.FindViewById(int) Activity.Finish() Activity.FinishActivity(int) Activity.FinishActivityFromChild(Activity, int) Activity.FinishAffinity() Activity.FinishAfterTransition() Activity.FinishAndRemoveTask() Activity.FinishFromChild(Activity) Activity.GetPreferences(FileCreationMode) Activity.InvalidateOptionsMenu() Activity.ManagedQuery(Uri, string[], string, string[], string) Activity.MoveTaskToBack(bool) Activity.NavigateUpTo(Intent) Activity.NavigateUpToFromChild(Activity, Intent) Activity.OnActionModeFinished(ActionMode) Activity.OnActionModeStarted(ActionMode) Activity.OnActivityReenter(int, Intent) Activity.OnActivityResult(int, Result, Intent, ComponentCaller) Activity.OnAttachedToWindow() Activity.OnAttachFragment(Fragment) Activity.OnChildTitleChanged(Activity, ICharSequence) Activity.OnChildTitleChanged(Activity, string) Activity.OnContentChanged() Activity.OnContextItemSelected(IMenuItem) Activity.OnContextMenuClosed(IMenu) Activity.OnCreate(Bundle, PersistableBundle) Activity.OnCreateContextMenu(IContextMenu, View, IContextMenuContextMenuInfo) Activity.OnCreateDescriptionFormatted() Activity.OnCreateDescription() Activity.OnCreateDialog(int, Bundle) Activity.OnCreateDialog(int) Activity.OnCreateNavigateUpTaskStack(TaskStackBuilder) Activity.OnCreateOptionsMenu(IMenu) Activity.OnCreatePanelMenu(int, IMenu) Activity.OnCreatePanelView(int) Activity.OnCreateThumbnail(Bitmap, Canvas) Activity.OnCreateView(View, string, Context, IAttributeSet) Activity.OnCreateView(string, Context, IAttributeSet) Activity.OnDestroy() Activity.OnDetachedFromWindow() Activity.OnEnterAnimationComplete() Activity.OnGenericMotionEvent(MotionEvent) Activity.OnGetDirectActions(CancellationSignal, IConsumer) Activity.OnKeyDown(Keycode, KeyEvent) Activity.OnKeyLongPress(Keycode, KeyEvent) Activity.OnKeyMultiple(Keycode, int, KeyEvent) Activity.OnKeyShortcut(Keycode, KeyEvent) Activity.OnKeyUp(Keycode, KeyEvent) Activity.OnLocalVoiceInteractionStarted() Activity.OnLocalVoiceInteractionStopped() Activity.OnLowMemory() Activity.OnMenuOpened(int, IMenu) Activity.OnMultiWindowModeChanged(bool, Configuration) Activity.OnMultiWindowModeChanged(bool) Activity.OnNavigateUp() Activity.OnNavigateUpFromChild(Activity) Activity.OnNewIntent(Intent, ComponentCaller) Activity.OnOptionsItemSelected(IMenuItem) Activity.OnOptionsMenuClosed(IMenu) Activity.OnPanelClosed(int, IMenu) Activity.OnPause() Activity.OnPerformDirectAction(string, Bundle, CancellationSignal, IConsumer) Activity.OnPictureInPictureModeChanged(bool, Configuration) Activity.OnPictureInPictureModeChanged(bool) Activity.OnPictureInPictureRequested() Activity.OnPictureInPictureUiStateChanged(PictureInPictureUiState) Activity.OnPostCreate(Bundle, PersistableBundle) Activity.OnPrepareDialog(int, Dialog, Bundle) Activity.OnPrepareDialog(int, Dialog) Activity.OnPrepareNavigateUpTaskStack(TaskStackBuilder) Activity.OnPrepareOptionsMenu(IMenu) Activity.OnPreparePanel(int, View, IMenu) Activity.OnProvideAssistContent(AssistContent) Activity.OnProvideAssistData(Bundle) Activity.OnProvideKeyboardShortcuts(IList<KeyboardShortcutGroup>, IMenu, int) Activity.OnProvideReferrer() Activity.OnRequestPermissionsResult(int, string[], Permission[], int) Activity.OnRestoreInstanceState(Bundle, PersistableBundle) Activity.OnResume() Activity.OnSaveInstanceState(Bundle, PersistableBundle) Activity.OnSaveInstanceState(Bundle) Activity.OnSearchRequested() Activity.OnSearchRequested(SearchEvent) Activity.OnStart() Activity.OnStateNotSaved() Activity.OnStop() Activity.OnTitleChanged(ICharSequence, Color) Activity.OnTitleChanged(string, Color) Activity.OnTopResumedActivityChanged(bool) Activity.OnTouchEvent(MotionEvent) Activity.OnTrackballEvent(MotionEvent) Activity.OnTrimMemory(TrimMemory) Activity.OnUserInteraction() Activity.OnUserLeaveHint() Activity.OnVisibleBehindCanceled() Activity.OnWindowAttributesChanged(WindowManagerLayoutParams) Activity.OnWindowFocusChanged(bool) Activity.OnWindowStartingActionMode(ActionMode.ICallback, ActionModeType) Activity.OnWindowStartingActionMode(ActionMode.ICallback) Activity.OpenContextMenu(View) Activity.OpenOptionsMenu() Activity.OverrideActivityTransition(OverrideTransition, int, int, int) Activity.OverrideActivityTransition(OverrideTransition, int, int) Activity.OverridePendingTransition(int, int, int) Activity.OverridePendingTransition(int, int) Activity.PostponeEnterTransition() Activity.Recreate() Activity.RegisterActivityLifecycleCallbacks(Application.IActivityLifecycleCallbacks) Activity.RegisterForContextMenu(View) Activity.RegisterScreenCaptureCallback(IExecutor, Activity.IScreenCaptureCallback) Activity.ReleaseInstance() Activity.RemoveDialog(int) Activity.ReportFullyDrawn() Activity.RequestDragAndDropPermissions(DragEvent) Activity.RequestFullscreenMode(FullscreenModeRequest, IOutcomeReceiver) Activity.RequestPermissions(string[], int, int) Activity.RequestPermissions(string[], int) Activity.RequestShowKeyboardShortcuts() Activity.RequestVisibleBehind(bool) Activity.RequestWindowFeature(WindowFeatures) Activity.RequireViewById(int) Activity.RunOnUiThread(IRunnable) Activity.SetActionBar(Toolbar) Activity.SetAllowCrossUidActivitySwitchFromBelow(bool) Activity.SetContentView(View, ViewGroup.LayoutParams) Activity.SetContentView(View) Activity.SetContentView(int) Activity.SetDefaultKeyMode(DefaultKey) Activity.SetEnterSharedElementCallback(SharedElementCallback) Activity.SetExitSharedElementCallback(SharedElementCallback) Activity.SetFeatureDrawable(WindowFeatures, Drawable) Activity.SetFeatureDrawableAlpha(WindowFeatures, int) Activity.SetFeatureDrawableResource(WindowFeatures, int) Activity.SetFeatureDrawableUri(WindowFeatures, Uri) Activity.SetFinishOnTouchOutside(bool) Activity.SetInheritShowWhenLocked(bool) Activity.SetIntent(Intent, ComponentCaller) Activity.SetLocusContext(LocusId, Bundle) Activity.SetPersistent(bool) Activity.SetPictureInPictureParams(PictureInPictureParams) Activity.SetProgress(int) Activity.SetProgressBarIndeterminate(bool) Activity.SetProgressBarIndeterminateVisibility(bool) Activity.SetProgressBarVisibility(bool) Activity.SetRecentsScreenshotEnabled(bool) Activity.SetResult(Result, Intent) Activity.SetResult(Result) Activity.SetSecondaryProgress(int) Activity.SetShouldDockBigOverlays(bool) Activity.SetShowWhenLocked(bool) Activity.SetTaskDescription(ActivityManager.TaskDescription) Activity.SetTitle(int) Activity.SetTranslucent(bool) Activity.SetTurnScreenOn(bool) Activity.SetVisible(bool) Activity.SetVrModeEnabled(bool, ComponentName) Activity.ShouldDockBigOverlays() Activity.ShouldShowRequestPermissionRationale(string, int) Activity.ShouldShowRequestPermissionRationale(string) Activity.ShouldUpRecreateTask(Intent) Activity.ShowAssist(Bundle) Activity.ShowDialog(int, Bundle) Activity.ShowDialog(int) Activity.ShowLockTaskEscapeMessage() Activity.StartActionMode(ActionMode.ICallback, ActionModeType) Activity.StartActionMode(ActionMode.ICallback) Activity.StartActivityForResult(Intent, int, Bundle) Activity.StartActivityForResult(Intent, int) Activity.StartActivityFromChild(Activity, Intent, int, Bundle) Activity.StartActivityFromChild(Activity, Intent, int) Activity.StartActivityFromFragment(Fragment, Intent, int, Bundle) Activity.StartActivityFromFragment(Fragment, Intent, int) Activity.StartActivityIfNeeded(Intent, int, Bundle) Activity.StartActivityIfNeeded(Intent, int) Activity.StartIntentSenderForResult(IntentSender, int, Intent, ActivityFlags, ActivityFlags, int, Bundle) Activity.StartIntentSenderForResult(IntentSender, int, Intent, ActivityFlags, ActivityFlags, int) Activity.StartIntentSenderFromChild(Activity, IntentSender, int, Intent, ActivityFlags, ActivityFlags, int, Bundle) Activity.StartIntentSenderFromChild(Activity, IntentSender, int, Intent, ActivityFlags, ActivityFlags, int) Activity.StartLocalVoiceInteraction(Bundle) Activity.StartLockTask() Activity.StartManagingCursor(ICursor) Activity.StartNextMatchingActivity(Intent, Bundle) Activity.StartNextMatchingActivity(Intent) Activity.StartPostponedEnterTransition() Activity.StartSearch(string, bool, Bundle, bool) Activity.StopLocalVoiceInteraction() Activity.StopLockTask() Activity.StopManagingCursor(ICursor) Activity.TakeKeyEvents(bool) Activity.TriggerSearch(string, Bundle) Activity.UnregisterActivityLifecycleCallbacks(Application.IActivityLifecycleCallbacks) Activity.UnregisterForContextMenu(View) Activity.UnregisterScreenCaptureCallback(Activity.IScreenCaptureCallback) Activity.FocusedStateSet Activity.ActionBar Activity.Application Activity.Caller Activity.CallingActivity Activity.CallingPackage Activity.ChangingConfigurations Activity.ComponentName Activity.ContentScene Activity.ContentTransitionManager Activity.CurrentCaller Activity.CurrentFocus Activity.FragmentManager Activity.HasWindowFocus Activity.Immersive Activity.InitialCaller Activity.InstanceCount Activity.Intent Activity.IsActivityTransitionRunning Activity.IsChangingConfigurations Activity.IsChild Activity.IsDestroyed Activity.IsFinishing Activity.IsInMultiWindowMode Activity.IsInPictureInPictureMode Activity.IsLaunchedFromBubble Activity.IsLocalVoiceInteractionSupported Activity.IsTaskRoot Activity.IsVoiceInteraction Activity.IsVoiceInteractionRoot Activity.LastNonConfigurationInstance Activity.LaunchedFromPackage Activity.LaunchedFromUid Activity.LayoutInflater Activity.LoaderManager Activity.LocalClassName Activity.MaxNumPictureInPictureActions Activity.MediaController Activity.MenuInflater Activity.OnBackInvokedDispatcher Activity.Parent Activity.ParentActivityIntent Activity.Referrer Activity.RequestedOrientation Activity.SearchEvent Activity.SplashScreen Activity.TaskId Activity.TitleFormatted Activity.Title Activity.TitleColor Activity.VoiceInteractor Activity.VolumeControlStream Activity.Window Activity.WindowManager ContextThemeWrapper.ApplyOverrideConfiguration(Configuration) ContextThemeWrapper.OnApplyThemeResource(Resources.Theme, int, bool) ContextThemeWrapper.SetTheme(Resources.Theme) ContextWrapper.AttachBaseContext(Context) ContextWrapper.BindService(Intent, IServiceConnection, Bind) ContextWrapper.CheckCallingOrSelfPermission(string) ContextWrapper.CheckCallingOrSelfUriPermission(Uri, ActivityFlags) ContextWrapper.CheckCallingPermission(string) ContextWrapper.CheckCallingUriPermission(Uri, ActivityFlags) ContextWrapper.CheckPermission(string, int, int) ContextWrapper.CheckSelfPermission(string) ContextWrapper.CheckUriPermission(Uri, int, int, ActivityFlags) ContextWrapper.CheckUriPermission(Uri, string, string, int, int, ActivityFlags) ContextWrapper.ClearWallpaper() ContextWrapper.CreateConfigurationContext(Configuration) ContextWrapper.CreateContextForSplit(string) ContextWrapper.CreateDeviceProtectedStorageContext() ContextWrapper.CreateDisplayContext(Display) ContextWrapper.CreatePackageContext(string, PackageContextFlags) ContextWrapper.DatabaseList() ContextWrapper.DeleteDatabase(string) ContextWrapper.DeleteFile(string) ContextWrapper.DeleteSharedPreferences(string) ContextWrapper.EnforceCallingOrSelfPermission(string, string) ContextWrapper.EnforceCallingOrSelfUriPermission(Uri, ActivityFlags, string) ContextWrapper.EnforceCallingPermission(string, string) ContextWrapper.EnforceCallingUriPermission(Uri, ActivityFlags, string) ContextWrapper.EnforcePermission(string, int, int, string) ContextWrapper.EnforceUriPermission(Uri, int, int, ActivityFlags, string) ContextWrapper.EnforceUriPermission(Uri, string, string, int, int, ActivityFlags, string) ContextWrapper.FileList() ContextWrapper.GetDatabasePath(string) ContextWrapper.GetDir(string, FileCreationMode) ContextWrapper.GetExternalCacheDirs() ContextWrapper.GetExternalFilesDir(string) ContextWrapper.GetExternalFilesDirs(string) ContextWrapper.GetExternalMediaDirs() ContextWrapper.GetFileStreamPath(string) ContextWrapper.GetObbDirs() ContextWrapper.GetSharedPreferences(string, FileCreationMode) ContextWrapper.GetSystemService(string) ContextWrapper.GetSystemServiceName(Class) ContextWrapper.GrantUriPermission(string, Uri, ActivityFlags) ContextWrapper.MoveDatabaseFrom(Context, string) ContextWrapper.MoveSharedPreferencesFrom(Context, string) ContextWrapper.OpenFileInput(string) ContextWrapper.OpenFileOutput(string, FileCreationMode) ContextWrapper.OpenOrCreateDatabase(string, FileCreationMode, SQLiteDatabase.ICursorFactory, IDatabaseErrorHandler) ContextWrapper.OpenOrCreateDatabase(string, FileCreationMode, SQLiteDatabase.ICursorFactory) ContextWrapper.PeekWallpaper() ContextWrapper.RegisterReceiver(BroadcastReceiver, IntentFilter, ActivityFlags) ContextWrapper.RegisterReceiver(BroadcastReceiver, IntentFilter, string, Handler, ActivityFlags) ContextWrapper.RegisterReceiver(BroadcastReceiver, IntentFilter, string, Handler) ContextWrapper.RegisterReceiver(BroadcastReceiver, IntentFilter) ContextWrapper.RemoveStickyBroadcast(Intent) ContextWrapper.RemoveStickyBroadcastAsUser(Intent, UserHandle) ContextWrapper.RevokeUriPermission(Uri, ActivityFlags) ContextWrapper.RevokeUriPermission(string, Uri, ActivityFlags) ContextWrapper.SendBroadcast(Intent, string) ContextWrapper.SendBroadcast(Intent) ContextWrapper.SendBroadcastAsUser(Intent, UserHandle, string) ContextWrapper.SendBroadcastAsUser(Intent, UserHandle) ContextWrapper.SendOrderedBroadcast(Intent, int, string, string, BroadcastReceiver, Handler, string, Bundle, Bundle) ContextWrapper.SendOrderedBroadcast(Intent, string, BroadcastReceiver, Handler, Result, string, Bundle) ContextWrapper.SendOrderedBroadcast(Intent, string) ContextWrapper.SendOrderedBroadcastAsUser(Intent, UserHandle, string, BroadcastReceiver, Handler, Result, string, Bundle) ContextWrapper.SendStickyBroadcast(Intent) ContextWrapper.SendStickyBroadcastAsUser(Intent, UserHandle) ContextWrapper.SendStickyOrderedBroadcast(Intent, BroadcastReceiver, Handler, Result, string, Bundle) ContextWrapper.SendStickyOrderedBroadcastAsUser(Intent, UserHandle, BroadcastReceiver, Handler, Result, string, Bundle) ContextWrapper.SetTheme(int) ContextWrapper.SetWallpaper(Bitmap) ContextWrapper.SetWallpaper(Stream) ContextWrapper.StartActivities(Intent[], Bundle) ContextWrapper.StartActivities(Intent[]) ContextWrapper.StartActivity(Intent, Bundle) ContextWrapper.StartActivity(Intent) ContextWrapper.StartForegroundService(Intent) ContextWrapper.StartInstrumentation(ComponentName, string, Bundle) ContextWrapper.StartIntentSender(IntentSender, Intent, ActivityFlags, ActivityFlags, int, Bundle) ContextWrapper.StartIntentSender(IntentSender, Intent, ActivityFlags, ActivityFlags, int) ContextWrapper.StartService(Intent) ContextWrapper.StopService(Intent) ContextWrapper.UnbindService(IServiceConnection) ContextWrapper.UnregisterReceiver(BroadcastReceiver) ContextWrapper.ApplicationContext ContextWrapper.ApplicationInfo ContextWrapper.Assets ContextWrapper.BaseContext ContextWrapper.CacheDir ContextWrapper.ClassLoader ContextWrapper.CodeCacheDir ContextWrapper.ContentResolver ContextWrapper.DataDir ContextWrapper.ExternalCacheDir ContextWrapper.FilesDir ContextWrapper.IsDeviceProtectedStorage ContextWrapper.MainLooper ContextWrapper.NoBackupFilesDir ContextWrapper.ObbDir ContextWrapper.PackageCodePath ContextWrapper.PackageManager ContextWrapper.PackageName ContextWrapper.PackageResourcePath ContextWrapper.Resources ContextWrapper.Theme ContextWrapper.Wallpaper ContextWrapper.WallpaperDesiredMinimumHeight ContextWrapper.WallpaperDesiredMinimumWidth Context.ReceiverVisibleToInstantApps Context.AccessibilityService Context.AccountService Context.ActivityService Context.AlarmService Context.AppOpsService Context.AppSearchService Context.AppwidgetService Context.AudioService Context.BatteryService Context.BindAllowActivityStarts Context.BindExternalServiceLong Context.BindNotPerceptible Context.BindPackageIsolatedProcess Context.BindSharedIsolatedProcess Context.BiometricService Context.BlobStoreService Context.BluetoothService Context.BugreportService Context.CameraService Context.CaptioningService Context.CarrierConfigService Context.ClipboardService Context.CompanionDeviceService Context.ConnectivityDiagnosticsService Context.ConnectivityService Context.ConsumerIrService Context.ContactKeysService Context.CredentialService Context.CrossProfileAppsService Context.DeviceIdDefault Context.DeviceIdInvalid Context.DeviceLockService Context.DevicePolicyService Context.DisplayHashService Context.DisplayService Context.DomainVerificationService Context.DownloadService Context.DropboxService Context.EuiccService Context.FileIntegrityService Context.FingerprintService Context.GameService Context.GrammaticalInflectionService Context.HardwarePropertiesService Context.HealthconnectService Context.InputMethodService Context.InputService Context.IpsecService Context.JobSchedulerService Context.KeyguardService Context.LauncherAppsService Context.LayoutInflaterService Context.LocaleService Context.LocationService Context.MediaCommunicationService Context.MediaMetricsService Context.MediaProjectionService Context.MediaRouterService Context.MediaSessionService Context.MidiService Context.NetworkStatsService Context.NfcService Context.NotificationService Context.NsdService Context.OverlayService Context.PeopleService Context.PerformanceHintService Context.PersistentDataBlockService Context.PowerService Context.PrintService Context.ProfilingService Context.ReceiverExported Context.ReceiverNotExported Context.RestrictionsService Context.RoleService Context.SearchService Context.SecurityStateService Context.SensorService Context.ShortcutService Context.StatusBarService Context.StorageService Context.StorageStatsService Context.SystemHealthService Context.TelecomService Context.TelephonyImsService Context.TelephonyService Context.TelephonySubscriptionService Context.TextClassificationService Context.TextServicesManagerService Context.TvInputService Context.TvInteractiveAppService Context.UiModeService Context.UsageStatsService Context.UsbService Context.UserService Context.VibratorManagerService Context.VibratorService Context.VirtualDeviceService Context.VpnManagementService Context.WallpaperService Context.WifiAwareService Context.WifiP2pService Context.WifiRttRangingService Context.WifiService Context.WindowService Context.StartActivity(Type) Context.RegisterReceiver(BroadcastReceiver, IntentFilter, ReceiverFlags) Context.RegisterReceiver(BroadcastReceiver, IntentFilter, string, Handler, ReceiverFlags) Context.BindIsolatedService(Intent, Context.BindServiceFlags, string, IExecutor, IServiceConnection) Context.BindIsolatedService(Intent, int, string, IExecutor, IServiceConnection) Context.BindService(Intent, Context.BindServiceFlags, IExecutor, IServiceConnection) Context.BindService(Intent, IServiceConnection, Context.BindServiceFlags) Context.BindService(Intent, Bind, IExecutor, IServiceConnection) Context.BindServiceAsUser(Intent, IServiceConnection, Context.BindServiceFlags, UserHandle) Context.BindServiceAsUser(Intent, IServiceConnection, int, UserHandle) Context.CheckCallingOrSelfUriPermissions(IList<Uri>, int) Context.CheckCallingUriPermissions(IList<Uri>, int) Context.CheckContentUriPermissionFull(Uri, int, int, ActivityFlags) Context.CheckUriPermissions(IList<Uri>, int, int, int) Context.CreateAttributionContext(string) Context.CreateContext(ContextParams) Context.CreateDeviceContext(int) Context.CreateWindowContext(Display, int, Bundle) Context.CreateWindowContext(int, Bundle) Context.GetColor(int) Context.GetColorStateList(int) Context.GetDrawable(int) Context.GetString(int, params Object[]) Context.GetString(int) Context.GetSystemService(Class) Context.GetTextFormatted(int) Context.GetText(int) Context.ObtainStyledAttributes(IAttributeSet, int[], int, int) Context.ObtainStyledAttributes(IAttributeSet, int[]) Context.ObtainStyledAttributes(int, int[]) Context.ObtainStyledAttributes(int[]) Context.RegisterComponentCallbacks(IComponentCallbacks) Context.RegisterDeviceIdChangeListener(IExecutor, IIntConsumer) Context.RevokeSelfPermissionOnKill(string) Context.RevokeSelfPermissionsOnKill(ICollection<string>) Context.SendBroadcast(Intent, string, Bundle) Context.SendBroadcastWithMultiplePermissions(Intent, string[]) Context.SendOrderedBroadcast(Intent, string, Bundle, BroadcastReceiver, Handler, Result, string, Bundle) Context.SendOrderedBroadcast(Intent, string, Bundle) Context.SendOrderedBroadcast(Intent, string, string, BroadcastReceiver, Handler, Result, string, Bundle) Context.SendStickyBroadcast(Intent, Bundle) Context.UnregisterComponentCallbacks(IComponentCallbacks) Context.UnregisterDeviceIdChangeListener(IIntConsumer) Context.UpdateServiceGroup(IServiceConnection, int, int) Context.AttributionSource Context.AttributionTag Context.DeviceId Context.Display Context.IsRestricted Context.IsUiContext Context.MainExecutor Context.OpPackageName Context.Params Object.Dispose() Object.Dispose(bool) Object.GetObject<T>(nint, nint, JniHandleOwnership) Object.GetObject<T>(nint, JniHandleOwnership) Object.FromArray<T>(T[]) Object.Clone() Object.Equals(Object) Object.JavaFinalize() Object.GetHashCode() Object.Notify() Object.NotifyAll() Object.ToString() Object.Wait() Object.Wait(long, int) Object.Wait(long) Object.Class object.Equals(object) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object)"
  },
  "api/AlohaKit.Animations.Sample.MainApplication.html": {
    "href": "api/AlohaKit.Animations.Sample.MainApplication.html",
    "title": "Class MainApplication | AlohaKit.Animations",
    "summary": "Class MainApplication Namespace AlohaKit.Animations.Sample Assembly AlohaKit.Animations.Sample.dll [Application] public class MainApplication : MauiApplication, IComponentCallbacks2, IComponentCallbacks, IJavaObject, IJavaPeerable, IDisposable, IPlatformApplication Inheritance object Object Context ContextWrapper Application MauiApplication MainApplication Implements IComponentCallbacks2 IComponentCallbacks IJavaObject IJavaPeerable IDisposable IPlatformApplication Inherited Members MauiApplication.OnCreate() MauiApplication.OnLowMemory() MauiApplication.OnTrimMemory(TrimMemory) MauiApplication.OnConfigurationChanged(Configuration) MauiApplication.Current MauiApplication.Services MauiApplication.Application Application.OnTerminate() Application.RegisterActivityLifecycleCallbacks(Application.IActivityLifecycleCallbacks) Application.RegisterOnProvideAssistDataListener(Application.IOnProvideAssistDataListener) Application.UnregisterActivityLifecycleCallbacks(Application.IActivityLifecycleCallbacks) Application.UnregisterOnProvideAssistDataListener(Application.IOnProvideAssistDataListener) Application.Context Application.SynchronizationContext Application.ProcessName ContextWrapper.AttachBaseContext(Context) ContextWrapper.BindService(Intent, IServiceConnection, Bind) ContextWrapper.CheckCallingOrSelfPermission(string) ContextWrapper.CheckCallingOrSelfUriPermission(Uri, ActivityFlags) ContextWrapper.CheckCallingPermission(string) ContextWrapper.CheckCallingUriPermission(Uri, ActivityFlags) ContextWrapper.CheckPermission(string, int, int) ContextWrapper.CheckSelfPermission(string) ContextWrapper.CheckUriPermission(Uri, int, int, ActivityFlags) ContextWrapper.CheckUriPermission(Uri, string, string, int, int, ActivityFlags) ContextWrapper.ClearWallpaper() ContextWrapper.CreateConfigurationContext(Configuration) ContextWrapper.CreateContextForSplit(string) ContextWrapper.CreateDeviceProtectedStorageContext() ContextWrapper.CreateDisplayContext(Display) ContextWrapper.CreatePackageContext(string, PackageContextFlags) ContextWrapper.DatabaseList() ContextWrapper.DeleteDatabase(string) ContextWrapper.DeleteFile(string) ContextWrapper.DeleteSharedPreferences(string) ContextWrapper.EnforceCallingOrSelfPermission(string, string) ContextWrapper.EnforceCallingOrSelfUriPermission(Uri, ActivityFlags, string) ContextWrapper.EnforceCallingPermission(string, string) ContextWrapper.EnforceCallingUriPermission(Uri, ActivityFlags, string) ContextWrapper.EnforcePermission(string, int, int, string) ContextWrapper.EnforceUriPermission(Uri, int, int, ActivityFlags, string) ContextWrapper.EnforceUriPermission(Uri, string, string, int, int, ActivityFlags, string) ContextWrapper.FileList() ContextWrapper.GetDatabasePath(string) ContextWrapper.GetDir(string, FileCreationMode) ContextWrapper.GetExternalCacheDirs() ContextWrapper.GetExternalFilesDir(string) ContextWrapper.GetExternalFilesDirs(string) ContextWrapper.GetExternalMediaDirs() ContextWrapper.GetFileStreamPath(string) ContextWrapper.GetObbDirs() ContextWrapper.GetSharedPreferences(string, FileCreationMode) ContextWrapper.GetSystemService(string) ContextWrapper.GetSystemServiceName(Class) ContextWrapper.GrantUriPermission(string, Uri, ActivityFlags) ContextWrapper.MoveDatabaseFrom(Context, string) ContextWrapper.MoveSharedPreferencesFrom(Context, string) ContextWrapper.OpenFileInput(string) ContextWrapper.OpenFileOutput(string, FileCreationMode) ContextWrapper.OpenOrCreateDatabase(string, FileCreationMode, SQLiteDatabase.ICursorFactory, IDatabaseErrorHandler) ContextWrapper.OpenOrCreateDatabase(string, FileCreationMode, SQLiteDatabase.ICursorFactory) ContextWrapper.PeekWallpaper() ContextWrapper.RegisterReceiver(BroadcastReceiver, IntentFilter, ActivityFlags) ContextWrapper.RegisterReceiver(BroadcastReceiver, IntentFilter, string, Handler, ActivityFlags) ContextWrapper.RegisterReceiver(BroadcastReceiver, IntentFilter, string, Handler) ContextWrapper.RegisterReceiver(BroadcastReceiver, IntentFilter) ContextWrapper.RemoveStickyBroadcast(Intent) ContextWrapper.RemoveStickyBroadcastAsUser(Intent, UserHandle) ContextWrapper.RevokeUriPermission(Uri, ActivityFlags) ContextWrapper.RevokeUriPermission(string, Uri, ActivityFlags) ContextWrapper.SendBroadcast(Intent, string) ContextWrapper.SendBroadcast(Intent) ContextWrapper.SendBroadcastAsUser(Intent, UserHandle, string) ContextWrapper.SendBroadcastAsUser(Intent, UserHandle) ContextWrapper.SendOrderedBroadcast(Intent, int, string, string, BroadcastReceiver, Handler, string, Bundle, Bundle) ContextWrapper.SendOrderedBroadcast(Intent, string, BroadcastReceiver, Handler, Result, string, Bundle) ContextWrapper.SendOrderedBroadcast(Intent, string) ContextWrapper.SendOrderedBroadcastAsUser(Intent, UserHandle, string, BroadcastReceiver, Handler, Result, string, Bundle) ContextWrapper.SendStickyBroadcast(Intent) ContextWrapper.SendStickyBroadcastAsUser(Intent, UserHandle) ContextWrapper.SendStickyOrderedBroadcast(Intent, BroadcastReceiver, Handler, Result, string, Bundle) ContextWrapper.SendStickyOrderedBroadcastAsUser(Intent, UserHandle, BroadcastReceiver, Handler, Result, string, Bundle) ContextWrapper.SetTheme(int) ContextWrapper.SetWallpaper(Bitmap) ContextWrapper.SetWallpaper(Stream) ContextWrapper.StartActivities(Intent[], Bundle) ContextWrapper.StartActivities(Intent[]) ContextWrapper.StartActivity(Intent, Bundle) ContextWrapper.StartActivity(Intent) ContextWrapper.StartForegroundService(Intent) ContextWrapper.StartInstrumentation(ComponentName, string, Bundle) ContextWrapper.StartIntentSender(IntentSender, Intent, ActivityFlags, ActivityFlags, int, Bundle) ContextWrapper.StartIntentSender(IntentSender, Intent, ActivityFlags, ActivityFlags, int) ContextWrapper.StartService(Intent) ContextWrapper.StopService(Intent) ContextWrapper.UnbindService(IServiceConnection) ContextWrapper.UnregisterReceiver(BroadcastReceiver) ContextWrapper.ApplicationContext ContextWrapper.ApplicationInfo ContextWrapper.Assets ContextWrapper.BaseContext ContextWrapper.CacheDir ContextWrapper.ClassLoader ContextWrapper.CodeCacheDir ContextWrapper.ContentResolver ContextWrapper.DataDir ContextWrapper.ExternalCacheDir ContextWrapper.FilesDir ContextWrapper.IsDeviceProtectedStorage ContextWrapper.MainLooper ContextWrapper.NoBackupFilesDir ContextWrapper.ObbDir ContextWrapper.PackageCodePath ContextWrapper.PackageManager ContextWrapper.PackageName ContextWrapper.PackageResourcePath ContextWrapper.Resources ContextWrapper.Theme ContextWrapper.Wallpaper ContextWrapper.WallpaperDesiredMinimumHeight ContextWrapper.WallpaperDesiredMinimumWidth Context.ReceiverVisibleToInstantApps Context.AccessibilityService Context.AccountService Context.ActivityService Context.AlarmService Context.AppOpsService Context.AppSearchService Context.AppwidgetService Context.AudioService Context.BatteryService Context.BindAllowActivityStarts Context.BindExternalServiceLong Context.BindNotPerceptible Context.BindPackageIsolatedProcess Context.BindSharedIsolatedProcess Context.BiometricService Context.BlobStoreService Context.BluetoothService Context.BugreportService Context.CameraService Context.CaptioningService Context.CarrierConfigService Context.ClipboardService Context.CompanionDeviceService Context.ConnectivityDiagnosticsService Context.ConnectivityService Context.ConsumerIrService Context.ContactKeysService Context.CredentialService Context.CrossProfileAppsService Context.DeviceIdDefault Context.DeviceIdInvalid Context.DeviceLockService Context.DevicePolicyService Context.DisplayHashService Context.DisplayService Context.DomainVerificationService Context.DownloadService Context.DropboxService Context.EuiccService Context.FileIntegrityService Context.FingerprintService Context.GameService Context.GrammaticalInflectionService Context.HardwarePropertiesService Context.HealthconnectService Context.InputMethodService Context.InputService Context.IpsecService Context.JobSchedulerService Context.KeyguardService Context.LauncherAppsService Context.LayoutInflaterService Context.LocaleService Context.LocationService Context.MediaCommunicationService Context.MediaMetricsService Context.MediaProjectionService Context.MediaRouterService Context.MediaSessionService Context.MidiService Context.NetworkStatsService Context.NfcService Context.NotificationService Context.NsdService Context.OverlayService Context.PeopleService Context.PerformanceHintService Context.PersistentDataBlockService Context.PowerService Context.PrintService Context.ProfilingService Context.ReceiverExported Context.ReceiverNotExported Context.RestrictionsService Context.RoleService Context.SearchService Context.SecurityStateService Context.SensorService Context.ShortcutService Context.StatusBarService Context.StorageService Context.StorageStatsService Context.SystemHealthService Context.TelecomService Context.TelephonyImsService Context.TelephonyService Context.TelephonySubscriptionService Context.TextClassificationService Context.TextServicesManagerService Context.TvInputService Context.TvInteractiveAppService Context.UiModeService Context.UsageStatsService Context.UsbService Context.UserService Context.VibratorManagerService Context.VibratorService Context.VirtualDeviceService Context.VpnManagementService Context.WallpaperService Context.WifiAwareService Context.WifiP2pService Context.WifiRttRangingService Context.WifiService Context.WindowService Context.StartActivity(Type) Context.RegisterReceiver(BroadcastReceiver, IntentFilter, ReceiverFlags) Context.RegisterReceiver(BroadcastReceiver, IntentFilter, string, Handler, ReceiverFlags) Context.BindIsolatedService(Intent, Context.BindServiceFlags, string, IExecutor, IServiceConnection) Context.BindIsolatedService(Intent, int, string, IExecutor, IServiceConnection) Context.BindService(Intent, Context.BindServiceFlags, IExecutor, IServiceConnection) Context.BindService(Intent, IServiceConnection, Context.BindServiceFlags) Context.BindService(Intent, Bind, IExecutor, IServiceConnection) Context.BindServiceAsUser(Intent, IServiceConnection, Context.BindServiceFlags, UserHandle) Context.BindServiceAsUser(Intent, IServiceConnection, int, UserHandle) Context.CheckCallingOrSelfUriPermissions(IList<Uri>, int) Context.CheckCallingUriPermissions(IList<Uri>, int) Context.CheckContentUriPermissionFull(Uri, int, int, ActivityFlags) Context.CheckUriPermissions(IList<Uri>, int, int, int) Context.CreateAttributionContext(string) Context.CreateContext(ContextParams) Context.CreateDeviceContext(int) Context.CreateWindowContext(Display, int, Bundle) Context.CreateWindowContext(int, Bundle) Context.GetColor(int) Context.GetColorStateList(int) Context.GetDrawable(int) Context.GetString(int, params Object[]) Context.GetString(int) Context.GetSystemService(Class) Context.GetTextFormatted(int) Context.GetText(int) Context.ObtainStyledAttributes(IAttributeSet, int[], int, int) Context.ObtainStyledAttributes(IAttributeSet, int[]) Context.ObtainStyledAttributes(int, int[]) Context.ObtainStyledAttributes(int[]) Context.RegisterComponentCallbacks(IComponentCallbacks) Context.RegisterDeviceIdChangeListener(IExecutor, IIntConsumer) Context.RevokeSelfPermissionOnKill(string) Context.RevokeSelfPermissionsOnKill(ICollection<string>) Context.SendBroadcast(Intent, string, Bundle) Context.SendBroadcastWithMultiplePermissions(Intent, string[]) Context.SendOrderedBroadcast(Intent, string, Bundle, BroadcastReceiver, Handler, Result, string, Bundle) Context.SendOrderedBroadcast(Intent, string, Bundle) Context.SendOrderedBroadcast(Intent, string, string, BroadcastReceiver, Handler, Result, string, Bundle) Context.SendStickyBroadcast(Intent, Bundle) Context.UnregisterComponentCallbacks(IComponentCallbacks) Context.UnregisterDeviceIdChangeListener(IIntConsumer) Context.UpdateServiceGroup(IServiceConnection, int, int) Context.AttributionSource Context.AttributionTag Context.DeviceId Context.Display Context.IsRestricted Context.IsUiContext Context.MainExecutor Context.OpPackageName Context.Params Object.Dispose() Object.Dispose(bool) Object.GetObject<T>(nint, nint, JniHandleOwnership) Object.GetObject<T>(nint, JniHandleOwnership) Object.FromArray<T>(T[]) Object.Clone() Object.Equals(Object) Object.JavaFinalize() Object.GetHashCode() Object.Notify() Object.NotifyAll() Object.ToString() Object.Wait() Object.Wait(long, int) Object.Wait(long) Object.Class object.Equals(object) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MainApplication(nint, JniHandleOwnership) public MainApplication(nint handle, JniHandleOwnership ownership) Parameters handle nint ownership JniHandleOwnership Methods CreateMauiApp() When overridden in a derived class, creates the MauiApp to be used in this application. Typically a MauiApp is created by calling CreateBuilder(bool), configuring the returned MauiAppBuilder, and returning the built app by calling Build(). protected override MauiApp CreateMauiApp() Returns MauiApp The built MauiApp."
  },
  "api/AlohaKit.Animations.Sample.MauiProgram.html": {
    "href": "api/AlohaKit.Animations.Sample.MauiProgram.html",
    "title": "Class MauiProgram | AlohaKit.Animations",
    "summary": "Class MauiProgram Namespace AlohaKit.Animations.Sample Assembly AlohaKit.Animations.Sample.dll public static class MauiProgram Inheritance object MauiProgram Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateMauiApp() public static MauiApp CreateMauiApp() Returns MauiApp"
  },
  "api/AlohaKit.Animations.Sample.Resource.html": {
    "href": "api/AlohaKit.Animations.Sample.Resource.html",
    "title": "Class Resource | AlohaKit.Animations",
    "summary": "Class Resource Namespace AlohaKit.Animations.Sample Assembly AlohaKit.Animations.Sample.dll Android Resource Designer class. Exposes the Android Resource designer assembly into the project Namespace. public class Resource : ResourceConstant Inheritance object ResourceConstant Resource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/AlohaKit.Animations.Sample.html": {
    "href": "api/AlohaKit.Animations.Sample.html",
    "title": "Namespace AlohaKit.Animations.Sample | AlohaKit.Animations",
    "summary": "Namespace AlohaKit.Animations.Sample Classes App AppShell MainActivity MainApplication MauiProgram Resource Android Resource Designer class. Exposes the Android Resource designer assembly into the project Namespace."
  },
  "api/AlohaKit.Animations.ScaleToAnimation.html": {
    "href": "api/AlohaKit.Animations.ScaleToAnimation.html",
    "title": "Class ScaleToAnimation | AlohaKit.Animations",
    "summary": "Class ScaleToAnimation Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll Represents an animation that scales the target element to a specified size. public class ScaleToAnimation : AnimationBase, INotifyPropertyChanged Inheritance object BindableObject AnimationBase ScaleToAnimation Implements INotifyPropertyChanged Inherited Members AnimationBase.TargetProperty AnimationBase.Target AnimationBase.DurationProperty AnimationBase.Duration AnimationBase.EasingProperty AnimationBase.Easing AnimationBase.DelayProperty AnimationBase.Delay AnimationBase.RepeatForeverProperty AnimationBase.RepeatForever AnimationBase.Begin() AnimationBase.End() BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ScaleProperty Bindable property for specifying the target scale value. public static readonly BindableProperty ScaleProperty Field Value BindableProperty Properties Scale Gets or sets the target scale value for the animation. public double Scale { get; set; } Property Value double Methods BeginAnimation() protected override Task BeginAnimation() Returns Task"
  },
  "api/AlohaKit.Animations.ScrollViewScrollBehavior.html": {
    "href": "api/AlohaKit.Animations.ScrollViewScrollBehavior.html",
    "title": "Class ScrollViewScrollBehavior | AlohaKit.Animations",
    "summary": "Class ScrollViewScrollBehavior Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll The ScrollViewScrollBehavior class provides bindable properties to observe the horizontal and vertical scroll positions of a ScrollView and calculates relative and percentage-based scroll values. public class ScrollViewScrollBehavior : Behavior<ScrollView>, INotifyPropertyChanged Inheritance object BindableObject Behavior Behavior<ScrollView> ScrollViewScrollBehavior Implements INotifyPropertyChanged Inherited Members Behavior<ScrollView>.OnAttachedTo(BindableObject) Behavior<ScrollView>.OnDetachingFrom(BindableObject) Behavior.AssociatedType BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields PercentageScrollXProperty Bindable property for the horizontal scroll value as a percentage (0% to 100%). public static readonly BindableProperty PercentageScrollXProperty Field Value BindableProperty PercentageScrollYProperty Bindable property for the vertical scroll value as a percentage (0% to 100%). public static readonly BindableProperty PercentageScrollYProperty Field Value BindableProperty RelativeScrollXProperty Bindable property for the horizontal scroll value between 0 and 1. public static readonly BindableProperty RelativeScrollXProperty Field Value BindableProperty RelativeScrollYProperty Bindable property for the vertical scroll value between 0 and 1. public static readonly BindableProperty RelativeScrollYProperty Field Value BindableProperty ScrollXProperty Bindable property for the horizontal scroll value in pixels. public static readonly BindableProperty ScrollXProperty Field Value BindableProperty ScrollYProperty Bindable property for the vertical scroll value in pixels. public static readonly BindableProperty ScrollYProperty Field Value BindableProperty Properties PercentageScrollX Gets or sets the horizontal scroll value as a percentage (0% to 100%). public double PercentageScrollX { get; set; } Property Value double PercentageScrollY Gets or sets the vertical scroll value as a percentage (0% to 100%). public double PercentageScrollY { get; set; } Property Value double RelativeScrollX Gets or sets the horizontal scroll value as a relative value between 0 and 1. public double RelativeScrollX { get; set; } Property Value double RelativeScrollY Gets or sets the vertical scroll value as a relative value between 0 and 1. public double RelativeScrollY { get; set; } Property Value double ScrollX Gets or sets the horizontal scroll value in pixels. public double ScrollX { get; set; } Property Value double ScrollY Gets or sets the vertical scroll value in pixels. public double ScrollY { get; set; } Property Value double Methods OnAttachedTo(ScrollView) Called when the behavior is attached to a ScrollView. Subscribes to the scroll event of the associated ScrollView. protected override void OnAttachedTo(ScrollView bindable) Parameters bindable ScrollView The ScrollView to which the behavior is attached. OnDetachingFrom(ScrollView) Called when the behavior is detached from a ScrollView. Unsubscribes from the scroll event of the associated ScrollView. protected override void OnDetachingFrom(ScrollView bindable) Parameters bindable ScrollView The ScrollView from which the behavior is detached."
  },
  "api/AlohaKit.Animations.ShakeAnimation.html": {
    "href": "api/AlohaKit.Animations.ShakeAnimation.html",
    "title": "Class ShakeAnimation | AlohaKit.Animations",
    "summary": "Class ShakeAnimation Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll Represents an animation that simulates a \"shake\" effect by moving the target element back and forth along the X-axis. public class ShakeAnimation : AnimationBase, INotifyPropertyChanged Inheritance object BindableObject AnimationBase ShakeAnimation Implements INotifyPropertyChanged Inherited Members AnimationBase.TargetProperty AnimationBase.Target AnimationBase.DurationProperty AnimationBase.Duration AnimationBase.EasingProperty AnimationBase.Easing AnimationBase.DelayProperty AnimationBase.Delay AnimationBase.RepeatForeverProperty AnimationBase.RepeatForever AnimationBase.Begin() AnimationBase.End() BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BeginAnimation() protected override Task BeginAnimation() Returns Task"
  },
  "api/AlohaKit.Animations.StoryBoard.html": {
    "href": "api/AlohaKit.Animations.StoryBoard.html",
    "title": "Class StoryBoard | AlohaKit.Animations",
    "summary": "Class StoryBoard Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll Represents a storyboard that orchestrates a sequence of animations on a target element. [ContentProperty(\"Animations\")] public class StoryBoard : AnimationBase, INotifyPropertyChanged Inheritance object BindableObject AnimationBase StoryBoard Implements INotifyPropertyChanged Inherited Members AnimationBase.TargetProperty AnimationBase.Target AnimationBase.DurationProperty AnimationBase.Duration AnimationBase.EasingProperty AnimationBase.Easing AnimationBase.DelayProperty AnimationBase.Delay AnimationBase.RepeatForeverProperty AnimationBase.RepeatForever AnimationBase.Begin() AnimationBase.End() BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StoryBoard() Initializes a new instance of the StoryBoard class with an empty list of animations. public StoryBoard() StoryBoard(List<AnimationBase>) Initializes a new instance of the StoryBoard class with a specified list of animations. public StoryBoard(List<AnimationBase> animations) Parameters animations List<AnimationBase> A list of animations to be managed by the storyboard. Properties Animations Gets the list of animations managed by the storyboard. public List<AnimationBase> Animations { get; } Property Value List<AnimationBase> Methods BeginAnimation() protected override Task BeginAnimation() Returns Task"
  },
  "api/AlohaKit.Animations.TaskExtensions.html": {
    "href": "api/AlohaKit.Animations.TaskExtensions.html",
    "title": "Class TaskExtensions | AlohaKit.Animations",
    "summary": "Class TaskExtensions Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll public static class TaskExtensions Inheritance object TaskExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FireAndForget(Task, Action<Exception>) public static void FireAndForget(this Task task, Action<Exception> onException = null) Parameters task Task onException Action<Exception>"
  },
  "api/AlohaKit.Animations.TranslateToAnimation.html": {
    "href": "api/AlohaKit.Animations.TranslateToAnimation.html",
    "title": "Class TranslateToAnimation | AlohaKit.Animations",
    "summary": "Class TranslateToAnimation Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll Represents an animation that translates (moves) the target element to a specified position. public class TranslateToAnimation : AnimationBase, INotifyPropertyChanged Inheritance object BindableObject AnimationBase TranslateToAnimation Implements INotifyPropertyChanged Inherited Members AnimationBase.TargetProperty AnimationBase.Target AnimationBase.DurationProperty AnimationBase.Duration AnimationBase.EasingProperty AnimationBase.Easing AnimationBase.DelayProperty AnimationBase.Delay AnimationBase.RepeatForeverProperty AnimationBase.RepeatForever AnimationBase.Begin() AnimationBase.End() BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields TranslateXProperty Bindable property for specifying the target X-coordinate of the animation. public static readonly BindableProperty TranslateXProperty Field Value BindableProperty TranslateYProperty Bindable property for specifying the target Y-coordinate of the animation. public static readonly BindableProperty TranslateYProperty Field Value BindableProperty Properties TranslateX Gets or sets the target X-coordinate to move the element to. public double TranslateX { get; set; } Property Value double TranslateY Gets or sets the target Y-coordinate to move the element to. public double TranslateY { get; set; } Property Value double Methods BeginAnimation() protected override Task BeginAnimation() Returns Task"
  },
  "api/AlohaKit.Animations.TurnstileInAnimation.html": {
    "href": "api/AlohaKit.Animations.TurnstileInAnimation.html",
    "title": "Class TurnstileInAnimation | AlohaKit.Animations",
    "summary": "Class TurnstileInAnimation Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll Represents an animation that performs a \"turnstile-in\" effect by rotating and translating the target element as it enters. public class TurnstileInAnimation : AnimationBase, INotifyPropertyChanged Inheritance object BindableObject AnimationBase TurnstileInAnimation Implements INotifyPropertyChanged Inherited Members AnimationBase.TargetProperty AnimationBase.Target AnimationBase.DurationProperty AnimationBase.Duration AnimationBase.EasingProperty AnimationBase.Easing AnimationBase.DelayProperty AnimationBase.Delay AnimationBase.RepeatForeverProperty AnimationBase.RepeatForever AnimationBase.Begin() AnimationBase.End() BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BeginAnimation() protected override Task BeginAnimation() Returns Task"
  },
  "api/AlohaKit.Animations.TurnstileOutAnimation.html": {
    "href": "api/AlohaKit.Animations.TurnstileOutAnimation.html",
    "title": "Class TurnstileOutAnimation | AlohaKit.Animations",
    "summary": "Class TurnstileOutAnimation Namespace AlohaKit.Animations Assembly AlohaKit.Animations.dll public class TurnstileOutAnimation : AnimationBase, INotifyPropertyChanged Inheritance object BindableObject AnimationBase TurnstileOutAnimation Implements INotifyPropertyChanged Inherited Members AnimationBase.TargetProperty AnimationBase.Target AnimationBase.DurationProperty AnimationBase.Duration AnimationBase.EasingProperty AnimationBase.Easing AnimationBase.DelayProperty AnimationBase.Delay AnimationBase.RepeatForeverProperty AnimationBase.RepeatForever AnimationBase.Begin() AnimationBase.End() BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BeginAnimation() protected override Task BeginAnimation() Returns Task"
  },
  "api/AlohaKit.Animations.html": {
    "href": "api/AlohaKit.Animations.html",
    "title": "Namespace AlohaKit.Animations | AlohaKit.Animations",
    "summary": "Namespace AlohaKit.Animations Classes AnimateColor The AnimateColor class defines a mechanism to smoothly animate the color property of a target visual element using progress-based interpolation. AnimateCornerRadius The AnimateCornerRadius class animates the corner radius property of a visual element, providing a smooth transition from an initial value to a target value. AnimateDouble The AnimateDouble class provides a mechanism to animate the transition of a double value on a specified visual element, using interpolation based on animation progress. AnimateInt The AnimateInt class provides functionality to animate the transition of an integer property on a visual element using interpolation based on animation progress. AnimateProgressColor Represents a behavior that animates the transition of a color property from one value to another based on the progress of an animation. AnimateProgressCornerRadius The AnimateProgressCornerRadius class interpolates the corner radius property of a visual element, transitioning from an initial value to a target value as the animation progresses. AnimateProgressDouble The AnimateProgressDouble class interpolates a double property of a visual element, transitioning from an initial value to a target value as the animation progresses. It allows scaling of the value using a multiplier. AnimateProgressThickness The AnimateProgressThickness class interpolates the thickness property of a visual element, transitioning from an initial value to a target value as the animation progresses. AnimateThickness The AnimateThickness class provides functionality to animate the transition of a thickness property on a visual element, using interpolation based on animation progress. AnimationBase The AnimationBase class serves as an abstract base for animations, offering configurable properties such as duration, delay, easing, and repeat behavior. AnimationBaseTrigger<T> The AnimationBaseTrigger class provides the foundation for creating custom animation triggers by defining common properties, methods, and behavior for animations. AnimationExtensions Contains extension methods to simplify applying animations to visual elements. AnimationProgressBaseBehavior The AnimationProgressBaseBehavior class provides the foundation for creating behaviors that animate properties of a visual element based on the progress of an animation. BeginAnimation The BeginAnimation class defines a trigger action for starting an animation on a target visual element when the trigger is activated. BeginAnimationBehavior The BeginAnimationBehavior class provides functionality to automatically trigger an animation when the behavior is attached to a visual element. It ensures the animation is associated with the element and starts after a short delay. BounceInAnimation The BounceInAnimation is a custom animation designed to create a \"bounce-in\" effect, typically used in UI transitions where an element enters the screen with an animated bounce. BounceOutAnimation ColorAnimation The ColorAnimation is designed to animate a transition between colors within a user interface. ColorExtensions The ColorExtensions class contains methods to animate color changes and manage color animations for visual elements. EndAnimation The EndAnimation class defines a trigger action for stopping an animation applied to a visual element when the trigger is activated. EndAnimationBehavior The EndAnimationBehavior class provides functionality to automatically stop an animation when the behavior is attached to a visual element. It ensures the animation is associated with the element and invokes the End method on the animation. EntranceTransition The EntranceTransition class animates visual elements with an entrance effect that includes translation and opacity adjustments. It handles animations for the target element and its child elements. FadeInAnimation Represents an animation that fades in a visual element while translating it along the Y-axis. FadeOutAnimation Represents an animation that fades out a visual element while translating it along the Y-axis. FadeToAnimation The FadeToAnimation class adjusts the opacity of a target element over a specified duration. FlipAnimation An animation that allow an element to rotate around the Y-axis while transitioning its opacity. HeartAnimation Represents an animation that performs a \"heartbeat\" effect by scaling the target element in a pulsating manner. JumpAnimation Represents an animation that creates a \"jump\" effect by translating the target element along the Y-axis. RelRotateToAnimation Represents an animation that rotates the target element by a relative angle. RelScaleToAnimation Represents an animation that scales the target element relative to its current size. RotateToAnimation The RotateToAnimation class animates the rotation of a target element to a specified angle. RotateXToAnimation Represents an animation that rotates the target element around the X-axis to a specified angle. RotateYToAnimation Represents an animation that rotates the target element around the Y-axis to a specified angle. ScaleToAnimation Represents an animation that scales the target element to a specified size. ScrollViewScrollBehavior The ScrollViewScrollBehavior class provides bindable properties to observe the horizontal and vertical scroll positions of a ScrollView and calculates relative and percentage-based scroll values. ShakeAnimation Represents an animation that simulates a \"shake\" effect by moving the target element back and forth along the X-axis. StoryBoard Represents a storyboard that orchestrates a sequence of animations on a target element. TaskExtensions TranslateToAnimation Represents an animation that translates (moves) the target element to a specified position. TurnstileInAnimation Represents an animation that performs a \"turnstile-in\" effect by rotating and translating the target element as it enters. TurnstileOutAnimation Enums EasingType The EasingType enum provides a set of predefined easing functions used in animations. Each easing type determines the progression and behavior of an animation over time, allowing you to create smooth and visually appealing transitions. FadeInAnimation.FadeDirection Defines the direction of the fade-in animation (Up or Down). FadeOutAnimation.FadeDirection Defines the direction of the fade-out animation (Up or Down). FlipAnimation.FlipDirection Specifies the direction for a flip animation or effect."
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | AlohaKit.Animations",
    "summary": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | AlohaKit.Animations",
    "summary": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | AlohaKit.Animations",
    "summary": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}